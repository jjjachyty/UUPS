{
    "contractName": "Z",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "AddressEmptyCode",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address"
                }
            ],
            "name": "ERC1967InvalidImplementation",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1967NonPayable",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FailedInnerCall",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidInitialization",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotInitializing",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "UUPSUnauthorizedCallContext",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "slot",
                    "type": "bytes32"
                }
            ],
            "name": "UUPSUnsupportedProxiableUUID",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "ApplyRemovePledge",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint64",
                    "name": "version",
                    "type": "uint64"
                }
            ],
            "name": "Initialized",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address"
                }
            ],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "UPGRADE_INTERFACE_VERSION",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_addr",
                    "type": "address"
                }
            ],
            "name": "getRedemptionRelation",
            "outputs": [
                {
                    "components": [
                        {
                            "internalType": "uint256",
                            "name": "time",
                            "type": "uint256"
                        },
                        {
                            "internalType": "uint256",
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "internalType": "struct redemption",
                    "name": "",
                    "type": "tuple"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "proxiableUUID",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "redemptionRelation",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "time",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "addr",
                    "type": "address"
                }
            ],
            "name": "setZPlanToken",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newImplementation",
                    "type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "upgradeToAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ApplyRemovePledge\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getRedemptionRelation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct redemption\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"redemptionRelation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setZPlanToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/janly/data/solidity/UUPSNew/contracts/BT2_Z.sol\":\"Z\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/janly/data/solidity/UUPSNew/contracts/BT2_Z.sol\":{\"keccak256\":\"0x3073adb5fb1e48f39725148c8a4ac42ef20839e020adaf23ba2101b378e9a4e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://93babc2a020ac2d3a2b8bbf33287c1d2c90e023ebcc663b317ff3df907c49599\",\"dweb:/ipfs/QmTXiMQQhsfAHYs2L7bHE12hpgugNgoWMBfxhQoWaSJogW\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6b23d05aee285a12b8a1215335123e37db35d4a1a30b21dfa67c2c59be3bd31f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1795206087679c5f781091f3d1946950f3ea65d376440f8b7daf1b9037aa7990\",\"dweb:/ipfs/QmQEp2A7wPpS9QPycuXpoRg3L7bR5vSYBi9osBzbgHphmL\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x2e8e2745e465acaaa9bad6ff8a9be79b0916b1bb463887fd27adb8d1f05e371b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a8d3eea9a25358e2568f76de0ee1f8d3d3912d36707bb13f2737faeb8fe3a95\",\"dweb:/ipfs/QmX63sYBmPiKuiZvQSDxPo51aFBV7NEcqjqaUeeyxCfGDK\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
    "bytecode": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516116df6100f95f395f8181610bfa01528181610c230152610d6201526116df5ff3fe60806040526004361061011b575f3560e01c8063715018a61161009d578063a9059cbb11610062578063a9059cbb1461035f578063ad3cb1cc1461037e578063bff02570146103ae578063dd62ed3e14610428578063f2fde38b14610447575f80fd5b8063715018a6146102965780637f35d71e146102aa5780638129fc1c146102f15780638da5cb5b1461030557806395d89b411461034b575f80fd5b80633f5dea0f116100e35780633f5dea0f146101ef57806340c10f19146102105780634f1ef2861461022f57806352d1902d1461024257806370a0823114610256575f80fd5b806306fdde031461011f578063095ea7b31461014957806318160ddd1461017857806323b872dd146101b5578063313ce567146101d4575b5f80fd5b34801561012a575f80fd5b50610133610466565b60405161014091906112f5565b60405180910390f35b348015610154575f80fd5b50610168610163366004611342565b610526565b6040519015158152602001610140565b348015610183575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b604051908152602001610140565b3480156101c0575f80fd5b506101686101cf36600461136a565b61053f565b3480156101df575f80fd5b5060405160128152602001610140565b3480156101fa575f80fd5b5061020e6102093660046113a3565b610564565b005b34801561021b575f80fd5b5061020e61022a366004611342565b61058d565b61020e61023d3660046113d0565b6105a3565b34801561024d575f80fd5b506101a76105be565b348015610261575f80fd5b506101a76102703660046113a3565b6001600160a01b03165f9081525f8051602061166a833981519152602052604090205490565b3480156102a1575f80fd5b5061020e6105d9565b3480156102b5575f80fd5b506102dc6102c43660046113a3565b600160208190525f9182526040909120805491015482565b60408051928352602083019190915201610140565b3480156102fc575f80fd5b5061020e6105ec565b348015610310575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610140565b348015610356575f80fd5b5061013361073d565b34801561036a575f80fd5b50610168610379366004611342565b61077b565b348015610389575f80fd5b50610133604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156103b9575f80fd5b5061040d6103c83660046113a3565b604080518082019091525f8082526020820152506001600160a01b03165f90815260016020818152604092839020835180850190945280548452909101549082015290565b60408051825181526020928301519281019290925201610140565b348015610433575f80fd5b506101a761044236600461148c565b610a08565b348015610452575f80fd5b5061020e6104613660046113a3565b610a51565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f8051602061166a833981519152916104a4906114bd565b80601f01602080910402602001604051908101604052809291908181526020018280546104d0906114bd565b801561051b5780601f106104f25761010080835404028352916020019161051b565b820191905f5260205f20905b8154815290600101906020018083116104fe57829003601f168201915b505050505091505090565b5f33610533818585610a8e565b60019150505b92915050565b5f3361054c858285610aa0565b610557858585610b03565b60019150505b9392505050565b61056c610b60565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b610595610b60565b61059f8282610bbb565b5050565b6105ab610bef565b6105b482610c93565b61059f8282610c9b565b5f6105c7610d57565b505f8051602061168a83398151915290565b6105e1610b60565b6105ea5f610da0565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156106315750825b90505f8267ffffffffffffffff16600114801561064d5750303b155b90508115801561065b575080155b156106795760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156106a357845460ff60401b1916600160401b1785555b6106df604051806040016040528060018152602001602d60f91b815250604051806040016040528060018152602001602d60f91b815250610e10565b6106e833610e22565b6106f0610e33565b831561073657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f8051602061166a833981519152916104a4906114bd565b5f6107868383610e3b565b50306001600160a01b038416036109ff575f8054604051633da4c13d60e11b81523360048201526001600160a01b0390911690637b49827a906024016020604051808303815f875af11580156107de573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080291906114f5565b90505f81116108455760405162461bcd60e51b815260206004820152600a6024820152696e6f20706c656164676560b01b60448201526064015b60405180910390fd5b826108526127108361150c565b146108975760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b91030b6b7bab73a1032b93937b960591b604482015260640161083c565b335f9081526001602081815260409283902083518085019094528054808552920154908301521561098c5780514210610944575f546040516330d8f0eb60e21b81523360048201526001600160a01b039091169063c363c3ac906024015f604051808303815f87803b15801561090b575f80fd5b505af115801561091d573d5f803e3d5ffd5b5050335f908152600160208190526040822082815581019190915594506105399350505050565b60405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f7420726564656d7074696f6e206f6e20746869732074696d650000604482015260640161083c565b604051806040016040528042603c6109a4919061152b565b81526020908101849052335f8181526001808452604091829020855181559484015194019390935591518481527fb82bfe429e7ad7db8aeb97116e0914af98c53d4ee8a475bb01a0b17c8778fc19910160405180910390a250505b50600192915050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b610a59610b60565b6001600160a01b038116610a8257604051631e4fbdf760e01b81525f600482015260240161083c565b610a8b81610da0565b50565b610a9b8383836001610e48565b505050565b5f610aab8484610a08565b90505f198114610afd5781811015610aef57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161083c565b610afd84848484035f610e48565b50505050565b6001600160a01b038316610b2c57604051634b637e8f60e11b81525f600482015260240161083c565b6001600160a01b038216610b555760405163ec442f0560e01b81525f600482015260240161083c565b610a9b838383610f2b565b33610b927f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146105ea5760405163118cdaa760e01b815233600482015260240161083c565b6001600160a01b038216610be45760405163ec442f0560e01b81525f600482015260240161083c565b61059f5f8383610f2b565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610c7557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c695f8051602061168a833981519152546001600160a01b031690565b6001600160a01b031614155b156105ea5760405163703e46dd60e11b815260040160405180910390fd5b610a8b610b60565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610cf5575060408051601f3d908101601f19168201909252610cf2918101906114f5565b60015b610d1d57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161083c565b5f8051602061168a8339815191528114610d4d57604051632a87526960e21b81526004810182905260240161083c565b610a9b8383611064565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ea5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b610e186110b9565b61059f8282611102565b610e2a6110b9565b610a8b81611152565b6105ea6110b9565b5f33610533818585610b03565b5f8051602061166a8339815191526001600160a01b038516610e7f5760405163e602df0560e01b81525f600482015260240161083c565b6001600160a01b038416610ea857604051634a1406b160e11b81525f600482015260240161083c565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561073657836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610f1c91815260200190565b60405180910390a35050505050565b5f8051602061166a8339815191526001600160a01b038416610f655781816002015f828254610f5a919061152b565b90915550610fd59050565b6001600160a01b0384165f9081526020829052604090205482811015610fb75760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161083c565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316610ff3576002810180548390039055611011565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161105691815260200190565b60405180910390a350505050565b61106d8261115a565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156110b157610a9b82826111bd565b61059f61122f565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166105ea57604051631afcd79f60e31b815260040160405180910390fd5b61110a6110b9565b5f8051602061166a8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611143848261158e565b5060048101610afd838261158e565b610a596110b9565b806001600160a01b03163b5f0361118f57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161083c565b5f8051602061168a83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516111d9919061164e565b5f60405180830381855af49150503d805f8114611211576040519150601f19603f3d011682016040523d82523d5f602084013e611216565b606091505b509150915061122685838361124e565b95945050505050565b34156105ea5760405163b398979f60e01b815260040160405180910390fd5b6060826112635761125e826112aa565b61055d565b815115801561127a57506001600160a01b0384163b155b156112a357604051639996b31560e01b81526001600160a01b038516600482015260240161083c565b508061055d565b8051156112ba5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f5b838110156112ed5781810151838201526020016112d5565b50505f910152565b602081525f82518060208401526113138160408501602087016112d3565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461133d575f80fd5b919050565b5f8060408385031215611353575f80fd5b61135c83611327565b946020939093013593505050565b5f805f6060848603121561137c575f80fd5b61138584611327565b925061139360208501611327565b9150604084013590509250925092565b5f602082840312156113b3575f80fd5b61055d82611327565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156113e1575f80fd5b6113ea83611327565b9150602083013567ffffffffffffffff80821115611406575f80fd5b818501915085601f830112611419575f80fd5b81358181111561142b5761142b6113bc565b604051601f8201601f19908116603f01168101908382118183101715611453576114536113bc565b8160405282815288602084870101111561146b575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f806040838503121561149d575f80fd5b6114a683611327565b91506114b460208401611327565b90509250929050565b600181811c908216806114d157607f821691505b6020821081036114ef57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215611505575f80fd5b5051919050565b5f8261152657634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561053957634e487b7160e01b5f52601160045260245ffd5b601f821115610a9b57805f5260205f20601f840160051c8101602085101561156f5750805b601f840160051c820191505b81811015610736575f815560010161157b565b815167ffffffffffffffff8111156115a8576115a86113bc565b6115bc816115b684546114bd565b8461154a565b602080601f8311600181146115ef575f84156115d85750858301515b5f19600386901b1c1916600185901b178555611646565b5f85815260208120601f198616915b8281101561161d578886015182559484019460019091019084016115fe565b508582101561163a57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f825161165f8184602087016112d3565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220d4b1c2903c7150a9239f8003e0ec1ba77ec761fda76a7ab5ea751ad3e4993d0664736f6c63430008180033",
    "deployedBytecode": "60806040526004361061011b575f3560e01c8063715018a61161009d578063a9059cbb11610062578063a9059cbb1461035f578063ad3cb1cc1461037e578063bff02570146103ae578063dd62ed3e14610428578063f2fde38b14610447575f80fd5b8063715018a6146102965780637f35d71e146102aa5780638129fc1c146102f15780638da5cb5b1461030557806395d89b411461034b575f80fd5b80633f5dea0f116100e35780633f5dea0f146101ef57806340c10f19146102105780634f1ef2861461022f57806352d1902d1461024257806370a0823114610256575f80fd5b806306fdde031461011f578063095ea7b31461014957806318160ddd1461017857806323b872dd146101b5578063313ce567146101d4575b5f80fd5b34801561012a575f80fd5b50610133610466565b60405161014091906112f5565b60405180910390f35b348015610154575f80fd5b50610168610163366004611342565b610526565b6040519015158152602001610140565b348015610183575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b604051908152602001610140565b3480156101c0575f80fd5b506101686101cf36600461136a565b61053f565b3480156101df575f80fd5b5060405160128152602001610140565b3480156101fa575f80fd5b5061020e6102093660046113a3565b610564565b005b34801561021b575f80fd5b5061020e61022a366004611342565b61058d565b61020e61023d3660046113d0565b6105a3565b34801561024d575f80fd5b506101a76105be565b348015610261575f80fd5b506101a76102703660046113a3565b6001600160a01b03165f9081525f8051602061166a833981519152602052604090205490565b3480156102a1575f80fd5b5061020e6105d9565b3480156102b5575f80fd5b506102dc6102c43660046113a3565b600160208190525f9182526040909120805491015482565b60408051928352602083019190915201610140565b3480156102fc575f80fd5b5061020e6105ec565b348015610310575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b039091168152602001610140565b348015610356575f80fd5b5061013361073d565b34801561036a575f80fd5b50610168610379366004611342565b61077b565b348015610389575f80fd5b50610133604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156103b9575f80fd5b5061040d6103c83660046113a3565b604080518082019091525f8082526020820152506001600160a01b03165f90815260016020818152604092839020835180850190945280548452909101549082015290565b60408051825181526020928301519281019290925201610140565b348015610433575f80fd5b506101a761044236600461148c565b610a08565b348015610452575f80fd5b5061020e6104613660046113a3565b610a51565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f8051602061166a833981519152916104a4906114bd565b80601f01602080910402602001604051908101604052809291908181526020018280546104d0906114bd565b801561051b5780601f106104f25761010080835404028352916020019161051b565b820191905f5260205f20905b8154815290600101906020018083116104fe57829003601f168201915b505050505091505090565b5f33610533818585610a8e565b60019150505b92915050565b5f3361054c858285610aa0565b610557858585610b03565b60019150505b9392505050565b61056c610b60565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b610595610b60565b61059f8282610bbb565b5050565b6105ab610bef565b6105b482610c93565b61059f8282610c9b565b5f6105c7610d57565b505f8051602061168a83398151915290565b6105e1610b60565b6105ea5f610da0565b565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156106315750825b90505f8267ffffffffffffffff16600114801561064d5750303b155b90508115801561065b575080155b156106795760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156106a357845460ff60401b1916600160401b1785555b6106df604051806040016040528060018152602001602d60f91b815250604051806040016040528060018152602001602d60f91b815250610e10565b6106e833610e22565b6106f0610e33565b831561073657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f8051602061166a833981519152916104a4906114bd565b5f6107868383610e3b565b50306001600160a01b038416036109ff575f8054604051633da4c13d60e11b81523360048201526001600160a01b0390911690637b49827a906024016020604051808303815f875af11580156107de573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080291906114f5565b90505f81116108455760405162461bcd60e51b815260206004820152600a6024820152696e6f20706c656164676560b01b60448201526064015b60405180910390fd5b826108526127108361150c565b146108975760405162461bcd60e51b81526020600482015260156024820152743a3930b739b332b91030b6b7bab73a1032b93937b960591b604482015260640161083c565b335f9081526001602081815260409283902083518085019094528054808552920154908301521561098c5780514210610944575f546040516330d8f0eb60e21b81523360048201526001600160a01b039091169063c363c3ac906024015f604051808303815f87803b15801561090b575f80fd5b505af115801561091d573d5f803e3d5ffd5b5050335f908152600160208190526040822082815581019190915594506105399350505050565b60405162461bcd60e51b815260206004820152601e60248201527f63616e6e6f7420726564656d7074696f6e206f6e20746869732074696d650000604482015260640161083c565b604051806040016040528042603c6109a4919061152b565b81526020908101849052335f8181526001808452604091829020855181559484015194019390935591518481527fb82bfe429e7ad7db8aeb97116e0914af98c53d4ee8a475bb01a0b17c8778fc19910160405180910390a250505b50600192915050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b610a59610b60565b6001600160a01b038116610a8257604051631e4fbdf760e01b81525f600482015260240161083c565b610a8b81610da0565b50565b610a9b8383836001610e48565b505050565b5f610aab8484610a08565b90505f198114610afd5781811015610aef57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161083c565b610afd84848484035f610e48565b50505050565b6001600160a01b038316610b2c57604051634b637e8f60e11b81525f600482015260240161083c565b6001600160a01b038216610b555760405163ec442f0560e01b81525f600482015260240161083c565b610a9b838383610f2b565b33610b927f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146105ea5760405163118cdaa760e01b815233600482015260240161083c565b6001600160a01b038216610be45760405163ec442f0560e01b81525f600482015260240161083c565b61059f5f8383610f2b565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610c7557507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c695f8051602061168a833981519152546001600160a01b031690565b6001600160a01b031614155b156105ea5760405163703e46dd60e11b815260040160405180910390fd5b610a8b610b60565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610cf5575060408051601f3d908101601f19168201909252610cf2918101906114f5565b60015b610d1d57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161083c565b5f8051602061168a8339815191528114610d4d57604051632a87526960e21b81526004810182905260240161083c565b610a9b8383611064565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105ea5760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b610e186110b9565b61059f8282611102565b610e2a6110b9565b610a8b81611152565b6105ea6110b9565b5f33610533818585610b03565b5f8051602061166a8339815191526001600160a01b038516610e7f5760405163e602df0560e01b81525f600482015260240161083c565b6001600160a01b038416610ea857604051634a1406b160e11b81525f600482015260240161083c565b6001600160a01b038086165f9081526001830160209081526040808320938816835292905220839055811561073657836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610f1c91815260200190565b60405180910390a35050505050565b5f8051602061166a8339815191526001600160a01b038416610f655781816002015f828254610f5a919061152b565b90915550610fd59050565b6001600160a01b0384165f9081526020829052604090205482811015610fb75760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161083c565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316610ff3576002810180548390039055611011565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161105691815260200190565b60405180910390a350505050565b61106d8261115a565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156110b157610a9b82826111bd565b61059f61122f565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166105ea57604051631afcd79f60e31b815260040160405180910390fd5b61110a6110b9565b5f8051602061166a8339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03611143848261158e565b5060048101610afd838261158e565b610a596110b9565b806001600160a01b03163b5f0361118f57604051634c9c8ce360e01b81526001600160a01b038216600482015260240161083c565b5f8051602061168a83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516111d9919061164e565b5f60405180830381855af49150503d805f8114611211576040519150601f19603f3d011682016040523d82523d5f602084013e611216565b606091505b509150915061122685838361124e565b95945050505050565b34156105ea5760405163b398979f60e01b815260040160405180910390fd5b6060826112635761125e826112aa565b61055d565b815115801561127a57506001600160a01b0384163b155b156112a357604051639996b31560e01b81526001600160a01b038516600482015260240161083c565b508061055d565b8051156112ba5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f5b838110156112ed5781810151838201526020016112d5565b50505f910152565b602081525f82518060208401526113138160408501602087016112d3565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461133d575f80fd5b919050565b5f8060408385031215611353575f80fd5b61135c83611327565b946020939093013593505050565b5f805f6060848603121561137c575f80fd5b61138584611327565b925061139360208501611327565b9150604084013590509250925092565b5f602082840312156113b3575f80fd5b61055d82611327565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156113e1575f80fd5b6113ea83611327565b9150602083013567ffffffffffffffff80821115611406575f80fd5b818501915085601f830112611419575f80fd5b81358181111561142b5761142b6113bc565b604051601f8201601f19908116603f01168101908382118183101715611453576114536113bc565b8160405282815288602084870101111561146b575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f806040838503121561149d575f80fd5b6114a683611327565b91506114b460208401611327565b90509250929050565b600181811c908216806114d157607f821691505b6020821081036114ef57634e487b7160e01b5f52602260045260245ffd5b50919050565b5f60208284031215611505575f80fd5b5051919050565b5f8261152657634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561053957634e487b7160e01b5f52601160045260245ffd5b601f821115610a9b57805f5260205f20601f840160051c8101602085101561156f5750805b601f840160051c820191505b81811015610736575f815560010161157b565b815167ffffffffffffffff8111156115a8576115a86113bc565b6115bc816115b684546114bd565b8461154a565b602080601f8311600181146115ef575f84156115d85750858301515b5f19600386901b1c1916600185901b178555611646565b5f85815260208120601f198616915b8281101561161d578886015182559484019460019091019084016115fe565b508582101561163a57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f825161165f8184602087016112d3565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220d4b1c2903c7150a9239f8003e0ec1ba77ec761fda76a7ab5ea751ad3e4993d0664736f6c63430008180033",
    "sourceMap": "840:2073:0:-:0;;;1267:4:3;1224:48;;1152:53:0;;;;;;;;;-1:-1:-1;1176:22:0;:20;:22::i;:::-;840:2073;;7711:422:2;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:2;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:2;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:2;-1:-1:-1;;;;;8035:33:2;;;;;8087:29;;158:50:14;;;8087:29:2;;146:2:14;131:18;8087:29:2;;;;;;;7981:146;7760:373;7711:422::o;14:200:14:-;840:2073:0;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "840:2073:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:144:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5649:186;;;;;;;;;;-1:-1:-1;5649:186:4;;;;;:::i;:::-;;:::i;:::-;;;1272:14:14;;1265:22;1247:41;;1235:2;1220:18;5649:186:4;1107:187:14;4335:152:4;;;;;;;;;;-1:-1:-1;4466:14:4;;4335:152;;;1445:25:14;;;1433:2;1418:18;4335:152:4;1299:177:14;6395:244:4;;;;;;;;;;-1:-1:-1;6395:244:4;;;;;:::i;:::-;;:::i;4193:82::-;;;;;;;;;;-1:-1:-1;4193:82:4;;4266:2;1956:36:14;;1944:2;1929:18;4193:82:4;1814:184:14;1570:95:0;;;;;;;;;;-1:-1:-1;1570:95:0;;;;;:::i;:::-;;:::i;:::-;;1367:93;;;;;;;;;;-1:-1:-1;1367:93:0;;;;;:::i;:::-;;:::i;4254:214:3:-;;;;;;:::i;:::-;;:::i;3801:134::-;;;;;;;;;;;;;:::i;4545:171:4:-;;;;;;;;;;-1:-1:-1;4545:171:4;;;;;:::i;:::-;-1:-1:-1;;;;;4689:20:4;4610:7;4689:20;;;-1:-1:-1;;;;;;;;;;;4689:20:4;;;;;;;4545:171;3155:101:1;;;;;;;;;;;;;:::i;1036:56:0:-;;;;;;;;;;-1:-1:-1;1036:56:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3682:25:14;;;3738:2;3723:18;;3716:34;;;;3655:18;1036:56:0;3508:248:14;1211:150:0;;;;;;;;;;;;;:::i;2441:144:1:-;;;;;;;;;;-1:-1:-1;1313:22:1;2570:8;2441:144;;-1:-1:-1;;;;;2570:8:1;;;3907:51:14;;3895:2;3880:18;2441:144:1;3761:203:14;3412:148:4;;;;;;;;;;;;;:::i;1811:1100:0:-;;;;;;;;;;-1:-1:-1;1811:1100:0;;;;;:::i;:::-;;:::i;1915:58:3:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1915:58:3;;;;;1671:134:0;;;;;;;;;;-1:-1:-1;1671:134:0;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;1773:25:0;;;;;:18;:25;;;;;;;;;1766:32;;;;;;;;;;;;;;;;;;;;;1671:134;;;;;4185:13:14;;4167:32;;4255:4;4243:17;;;4237:24;4215:20;;;4208:54;;;;4140:18;1671:134:0;3969:299:14;5147:195:4;;;;;;;;;;-1:-1:-1;5147:195:4;;;;;:::i;:::-;;:::i;3405:215:1:-;;;;;;;;;;-1:-1:-1;3405:215:1;;;;;:::i;:::-;;:::i;3155:144:4:-;3285:7;3278:14;;3200:13;;-1:-1:-1;;;;;;;;;;;2503:20:4;3278:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:144;:::o;5649:186::-;5722:4;966:10:5;5776:31:4;966:10:5;5792:7:4;5801:5;5776:8;:31::i;:::-;5824:4;5817:11;;;5649:186;;;;;:::o;6395:244::-;6482:4;966:10:5;6538:37:4;6554:4;966:10:5;6569:5:4;6538:15;:37::i;:::-;6585:26;6595:4;6601:2;6605:5;6585:9;:26::i;:::-;6628:4;6621:11;;;6395:244;;;;;;:::o;1570:95:0:-;2334:13:1;:11;:13::i;:::-;1634:10:0::1;:24:::0;;-1:-1:-1;;;;;;1634:24:0::1;-1:-1:-1::0;;;;;1634:24:0;;;::::1;::::0;;;::::1;::::0;;1570:95::o;1367:93::-;2334:13:1;:11;:13::i;:::-;1436:17:0::1;1442:2;1446:6;1436:5;:17::i;:::-;1367:93:::0;;:::o;4254:214:3:-;2749:13;:11;:13::i;:::-;4369:36:::1;4387:17;4369;:36::i;:::-;4415:46;4437:17;4456:4;4415:21;:46::i;3801:134::-:0;3870:7;3020:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3801:134:3;:::o;3155:101:1:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;1211:150:0:-;8870:21:2;4302:15;;-1:-1:-1;;;4302:15:2;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:2;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:2;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:2;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:2;-1:-1:-1;;;5013:22:2;;;4979:67;1262:22:0::1;;;;;;;;;;;;;;-1:-1:-1::0;;;1262:22:0::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;1262:22:0::1;;::::0;:12:::1;:22::i;:::-;1294:26;1309:10;1294:14;:26::i;:::-;1330:24;:22;:24::i;:::-;5070:14:2::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:2;;;5142:14;;-1:-1:-1;5076:50:14;;5142:14:2;;5064:2:14;5049:18;5142:14:2;;;;;;;5066:101;4092:1081;;;;;1211:150:0:o;3412:148:4:-;3544:9;3537:16;;3459:13;;-1:-1:-1;;;;;;;;;;;2503:20:4;3537:16;;;:::i;1811:1100:0:-;1911:4;1927:25;1942:2;1946:5;1927:14;:25::i;:::-;-1:-1:-1;1980:4:0;-1:-1:-1;;;;;1966:19:0;;;1962:922;;2022:19;2044:10;;:77;;-1:-1:-1;;;2044:77:0;;2097:10;2044:77;;;3907:51:14;-1:-1:-1;;;;;2044:10:0;;;;:35;;3880:18:14;;2044:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2022:99;;2158:1;2144:11;:15;2136:37;;;;-1:-1:-1;;;2136:37:0;;5528:2:14;2136:37:0;;;5510:21:14;5567:2;5547:18;;;5540:30;-1:-1:-1;;;5586:18:14;;;5579:40;5636:18;;2136:37:0;;;;;;;;;2214:5;2195:17;2207:5;2195:11;:17;:::i;:::-;:24;2187:57;;;;-1:-1:-1;;;2187:57:0;;6089:2:14;2187:57:0;;;6071:21:14;6128:2;6108:18;;;6101:30;-1:-1:-1;;;6147:18:14;;;6140:51;6208:18;;2187:57:0;5887:345:14;2187:57:0;2303:10;2259:22;2284:30;;;:18;:30;;;;;;;;;2259:55;;;;;;;;;;;;;;;;;;;;2332:13;2328:330;;2369:9;;2382:15;-1:-1:-1;2365:217:0;;2421:10;;:50;;-1:-1:-1;;;2421:50:0;;2460:10;2421:50;;;3907:51:14;-1:-1:-1;;;;;2421:10:0;;;;:38;;3880:18:14;;2421:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2519:10:0;2500:30;;;;:18;:30;;;;;;;2493:37;;;;;;;;;2500:18;-1:-1:-1;2552:11:0;;-1:-1:-1;;;;2552:11:0;2365:217;2603:40;;-1:-1:-1;;;2603:40:0;;6439:2:14;2603:40:0;;;6421:21:14;6478:2;6458:18;;;6451:30;6517:32;6497:18;;;6490:60;6567:18;;2603:40:0;6237:354:14;2328:330:0;2718:93;;;;;;;;2746:15;2765:2;2746:22;;;;:::i;:::-;2718:93;;;;;;;;;2704:10;-1:-1:-1;2685:30:0;;;:18;:30;;;;;;;;:126;;;;;;;;;;;;;;2831:42;;1445:25:14;;;2831:42:0;;1418:18:14;2831:42:0;;;;;;;1987:897;;1962:922;-1:-1:-1;2900:4:0;1811:1100;;;;:::o;5147:195:4:-;-1:-1:-1;;;;;5306:20:4;;;5227:7;5306:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5147:195::o;3405:215:1:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:1;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:1;;3562:1:::1;3534:31;::::0;::::1;3907:51:14::0;3880:18;;3534:31:1::1;3761:203:14::0;3485:91:1::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;10408:128:4:-;10492:37;10501:5;10508:7;10517:5;10524:4;10492:8;:37::i;:::-;10408:128;;;:::o;12137:477::-;12236:24;12263:25;12273:5;12280:7;12263:9;:25::i;:::-;12236:52;;-1:-1:-1;;12302:16:4;:37;12298:310;;12378:5;12359:16;:24;12355:130;;;12410:60;;-1:-1:-1;;;12410:60:4;;-1:-1:-1;;;;;7043:32:14;;12410:60:4;;;7025:51:14;7092:18;;;7085:34;;;7135:18;;;7128:34;;;6998:18;;12410:60:4;6823:345:14;12355:130:4;12526:57;12535:5;12542:7;12570:5;12551:16;:24;12577:5;12526:8;:57::i;:::-;12226:388;12137:477;;;:::o;7012:300::-;-1:-1:-1;;;;;7095:18:4;;7091:86;;7136:30;;-1:-1:-1;;;7136:30:4;;7163:1;7136:30;;;3907:51:14;3880:18;;7136:30:4;3761:203:14;7091:86:4;-1:-1:-1;;;;;7190:16:4;;7186:86;;7229:32;;-1:-1:-1;;;7229:32:4;;7258:1;7229:32;;;3907:51:14;3880:18;;7229:32:4;3761:203:14;7186:86:4;7281:24;7289:4;7295:2;7299:5;7281:7;:24::i;2658:162:1:-;966:10:5;2717:7:1;1313:22;2570:8;-1:-1:-1;;;;;2570:8:1;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:1;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:1;;966:10:5;2763:40:1;;;3907:51:14;3880:18;;2763:40:1;3761:203:14;9140:208:4;-1:-1:-1;;;;;9210:21:4;;9206:91;;9254:32;;-1:-1:-1;;;9254:32:4;;9283:1;9254:32;;;3907:51:14;3880:18;;9254:32:4;3761:203:14;9206:91:4;9306:35;9322:1;9326:7;9335:5;9306:7;:35::i;4695:312:3:-;4775:4;-1:-1:-1;;;;;4784:6:3;4767:23;;;:120;;;4881:6;-1:-1:-1;;;;;4845:42:3;:32;-1:-1:-1;;;;;;;;;;;2035:53:8;-1:-1:-1;;;;;2035:53:8;;1957:138;4845:32:3;-1:-1:-1;;;;;4845:42:3;;;4767:120;4750:251;;;4961:29;;-1:-1:-1;;;4961:29:3;;;;;;;;;;;1466:98:0;2334:13:1;:11;:13::i;6148:538:3:-;6265:17;-1:-1:-1;;;;;6247:50:3;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6247:52:3;;;;;;;;-1:-1:-1;;6247:52:3;;;;;;;;;;;;:::i;:::-;;;6243:437;;6609:60;;-1:-1:-1;;;6609:60:3;;-1:-1:-1;;;;;3925:32:14;;6609:60:3;;;3907:51:14;3880:18;;6609:60:3;3761:203:14;6243:437:3;-1:-1:-1;;;;;;;;;;;6341:40:3;;6337:120;;6408:34;;-1:-1:-1;;;6408:34:3;;;;;1445:25:14;;;1418:18;;6408:34:3;1299:177:14;6337:120:3;6470:54;6500:17;6519:4;6470:29;:54::i;5124:213::-;5198:4;-1:-1:-1;;;;;5207:6:3;5190:23;;5186:145;;5291:29;;-1:-1:-1;;;5291:29:3;;;;;;;;;;;3774:248:1;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:1;;-1:-1:-1;;;;;3941:19:1;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;2721:147:4:-;6931:20:2;:18;:20::i;:::-;2823:38:4::1;2846:5;2853:7;2823:22;:38::i;1847:127:1:-:0;6931:20:2;:18;:20::i;:::-;1929:38:1::1;1954:12;1929:24;:38::i;3064:67:3:-:0;6931:20:2;:18;:20::i;4911:178:4:-;4980:4;966:10:5;5034:27:4;966:10:5;5051:2:4;5055:5;5034:9;:27::i;11368:487::-;-1:-1:-1;;;;;;;;;;;;;;;;11533:19:4;;11529:89;;11575:32;;-1:-1:-1;;;11575:32:4;;11604:1;11575:32;;;3907:51:14;3880:18;;11575:32:4;3761:203:14;11529:89:4;-1:-1:-1;;;;;11631:21:4;;11627:90;;11675:31;;-1:-1:-1;;;11675:31:4;;11703:1;11675:31;;;3907:51:14;3880:18;;11675:31:4;3761:203:14;11627:90:4;-1:-1:-1;;;;;11726:20:4;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11773:76;;;;11823:7;-1:-1:-1;;;;;11807:31:4;11816:5;-1:-1:-1;;;;;11807:31:4;;11832:5;11807:31;;;;1445:25:14;;1433:2;1418:18;;1299:177;11807:31:4;;;;;;;;11466:389;11368:487;;;;:::o;7627:1170::-;-1:-1:-1;;;;;;;;;;;;;;;;7769:18:4;;7765:546;;7923:5;7905:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7765:546:4;;-1:-1:-1;7765:546:4;;-1:-1:-1;;;;;7981:17:4;;7959:19;7981:17;;;;;;;;;;;8016:19;;;8012:115;;;8062:50;;-1:-1:-1;;;8062:50:4;;-1:-1:-1;;;;;7043:32:14;;8062:50:4;;;7025:51:14;7092:18;;;7085:34;;;7135:18;;;7128:34;;;6998:18;;8062:50:4;6823:345:14;8012:115:4;-1:-1:-1;;;;;8247:17:4;;:11;:17;;;;;;;;;;8267:19;;;;8247:39;;7765:546;-1:-1:-1;;;;;8325:16:4;;8321:429;;8488:14;;;:23;;;;;;;8321:429;;;-1:-1:-1;;;;;8701:15:4;;:11;:15;;;;;;;;;;:24;;;;;;8321:429;8780:2;-1:-1:-1;;;;;8765:25:4;8774:4;-1:-1:-1;;;;;8765:25:4;;8784:5;8765:25;;;;1445::14;;1433:2;1418:18;;1299:177;8765:25:4;;;;;;;;7702:1095;7627:1170;;;:::o;2779:335:8:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:8;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:2:-;8870:21;8560:40;-1:-1:-1;;;8560:40:2;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:2;;;;;;;;;;;2874:216:4;6931:20:2;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;3039:7:4;:15:::1;3049:5:::0;3039:7;:15:::1;:::i;:::-;-1:-1:-1::0;3064:9:4::1;::::0;::::1;:19;3076:7:::0;3064:9;:19:::1;:::i;1980:235:1:-:0;6931:20:2;:18;:20::i;2186:281:8:-;2263:17;-1:-1:-1;;;;;2263:29:8;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:8;;-1:-1:-1;;;;;3925:32:14;;2320:47:8;;;3907:51:14;3880:18;;2320:47:8;3761:203:14;2259:119:8;-1:-1:-1;;;;;;;;;;;2387:73:8;;-1:-1:-1;;;;;;2387:73:8;-1:-1:-1;;;;;2387:73:8;;;;;;;;;;2186:281::o;4106:253:12:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:12;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:12:o;6598:122:8:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:8;;;;;;;;;;;4625:582:12;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:12;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:12;;-1:-1:-1;;;;;3925:32:14;;5121:24:12;;;3907:51:14;3880:18;;5121:24:12;3761:203:14;5041:119:12;-1:-1:-1;5180:10:12;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:12;;;;;;;;;;;14:250:14;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:14;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:14;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:14:o;670:173::-;738:20;;-1:-1:-1;;;;;787:31:14;;777:42;;767:70;;833:1;830;823:12;767:70;670:173;;;:::o;848:254::-;916:6;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1016:29;1035:9;1016:29;:::i;:::-;1006:39;1092:2;1077:18;;;;1064:32;;-1:-1:-1;;;848:254:14:o;1481:328::-;1558:6;1566;1574;1627:2;1615:9;1606:7;1602:23;1598:32;1595:52;;;1643:1;1640;1633:12;1595:52;1666:29;1685:9;1666:29;:::i;:::-;1656:39;;1714:38;1748:2;1737:9;1733:18;1714:38;:::i;:::-;1704:48;;1799:2;1788:9;1784:18;1771:32;1761:42;;1481:328;;;;;:::o;2003:186::-;2062:6;2115:2;2103:9;2094:7;2090:23;2086:32;2083:52;;;2131:1;2128;2121:12;2083:52;2154:29;2173:9;2154:29;:::i;2194:127::-;2255:10;2250:3;2246:20;2243:1;2236:31;2286:4;2283:1;2276:15;2310:4;2307:1;2300:15;2326:995;2403:6;2411;2464:2;2452:9;2443:7;2439:23;2435:32;2432:52;;;2480:1;2477;2470:12;2432:52;2503:29;2522:9;2503:29;:::i;:::-;2493:39;;2583:2;2572:9;2568:18;2555:32;2606:18;2647:2;2639:6;2636:14;2633:34;;;2663:1;2660;2653:12;2633:34;2701:6;2690:9;2686:22;2676:32;;2746:7;2739:4;2735:2;2731:13;2727:27;2717:55;;2768:1;2765;2758:12;2717:55;2804:2;2791:16;2826:2;2822;2819:10;2816:36;;;2832:18;;:::i;:::-;2907:2;2901:9;2875:2;2961:13;;-1:-1:-1;;2957:22:14;;;2981:2;2953:31;2949:40;2937:53;;;3005:18;;;3025:22;;;3002:46;2999:72;;;3051:18;;:::i;:::-;3091:10;3087:2;3080:22;3126:2;3118:6;3111:18;3166:7;3161:2;3156;3152;3148:11;3144:20;3141:33;3138:53;;;3187:1;3184;3177:12;3138:53;3243:2;3238;3234;3230:11;3225:2;3217:6;3213:15;3200:46;3288:1;3283:2;3278;3270:6;3266:15;3262:24;3255:35;3309:6;3299:16;;;;;;;2326:995;;;;;:::o;4273:260::-;4341:6;4349;4402:2;4390:9;4381:7;4377:23;4373:32;4370:52;;;4418:1;4415;4408:12;4370:52;4441:29;4460:9;4441:29;:::i;:::-;4431:39;;4489:38;4523:2;4512:9;4508:18;4489:38;:::i;:::-;4479:48;;4273:260;;;;;:::o;4538:380::-;4617:1;4613:12;;;;4660;;;4681:61;;4735:4;4727:6;4723:17;4713:27;;4681:61;4788:2;4780:6;4777:14;4757:18;4754:38;4751:161;;4834:10;4829:3;4825:20;4822:1;4815:31;4869:4;4866:1;4859:15;4897:4;4894:1;4887:15;4751:161;;4538:380;;;:::o;5137:184::-;5207:6;5260:2;5248:9;5239:7;5235:23;5231:32;5228:52;;;5276:1;5273;5266:12;5228:52;-1:-1:-1;5299:16:14;;5137:184;-1:-1:-1;5137:184:14:o;5665:217::-;5705:1;5731;5721:132;;5775:10;5770:3;5766:20;5763:1;5756:31;5810:4;5807:1;5800:15;5838:4;5835:1;5828:15;5721:132;-1:-1:-1;5867:9:14;;5665:217::o;6596:222::-;6661:9;;;6682:10;;;6679:133;;;6734:10;6729:3;6725:20;6722:1;6715:31;6769:4;6766:1;6759:15;6797:4;6794:1;6787:15;7488:518;7590:2;7585:3;7582:11;7579:421;;;7626:5;7623:1;7616:16;7670:4;7667:1;7657:18;7740:2;7728:10;7724:19;7721:1;7717:27;7711:4;7707:38;7776:4;7764:10;7761:20;7758:47;;;-1:-1:-1;7799:4:14;7758:47;7854:2;7849:3;7845:12;7842:1;7838:20;7832:4;7828:31;7818:41;;7909:81;7927:2;7920:5;7917:13;7909:81;;;7986:1;7972:16;;7953:1;7942:13;7909:81;;8182:1345;8308:3;8302:10;8335:18;8327:6;8324:30;8321:56;;;8357:18;;:::i;:::-;8386:97;8476:6;8436:38;8468:4;8462:11;8436:38;:::i;:::-;8430:4;8386:97;:::i;:::-;8538:4;;8595:2;8584:14;;8612:1;8607:663;;;;9314:1;9331:6;9328:89;;;-1:-1:-1;9383:19:14;;;9377:26;9328:89;-1:-1:-1;;8139:1:14;8135:11;;;8131:24;8127:29;8117:40;8163:1;8159:11;;;8114:57;9430:81;;8577:944;;8607:663;7435:1;7428:14;;;7472:4;7459:18;;-1:-1:-1;;8643:20:14;;;8761:236;8775:7;8772:1;8769:14;8761:236;;;8864:19;;;8858:26;8843:42;;8956:27;;;;8924:1;8912:14;;;;8791:19;;8761:236;;;8765:3;9025:6;9016:7;9013:19;9010:201;;;9086:19;;;9080:26;-1:-1:-1;;9169:1:14;9165:14;;;9181:3;9161:24;9157:37;9153:42;9138:58;9123:74;;9010:201;;;9257:1;9248:6;9245:1;9241:14;9237:22;9231:4;9224:36;8577:944;;;;;8182:1345;;:::o;9532:287::-;9661:3;9699:6;9693:13;9715:66;9774:6;9769:3;9762:4;9754:6;9750:17;9715:66;:::i;:::-;9797:16;;;;;9532:287;-1:-1:-1;;9532:287:14:o",
    "sourcePath": "/Users/janly/data/solidity/UUPSNew/contracts/BT2_Z.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.24+commit.e11b9ed9"
    },
    "ast": {
        "absolutePath": "/Users/janly/data/solidity/UUPSNew/contracts/BT2_Z.sol",
        "exportedSymbols": {
            "ContextUpgradeable": [
                1530
            ],
            "ERC1967Utils": [
                1980
            ],
            "ERC20Upgradeable": [
                1484
            ],
            "IERC1822Proxiable": [
                1540
            ],
            "IERC20": [
                2068
            ],
            "IERC20Errors": [
                1582
            ],
            "IERC20Metadata": [
                2094
            ],
            "Initializable": [
                685
            ],
            "OwnableUpgradeable": [
                431
            ],
            "UUPSUpgradeable": [
                867
            ],
            "Z": [
                236
            ],
            "ZPlan": [
                18
            ],
            "redemption": [
                23
            ]
        },
        "id": 237,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                ],
                "nodeType": "PragmaDirective",
                "src": "81:24:0"
            },
            {
                "absolutePath": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "file": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 237,
                "sourceUnit": 1485,
                "src": "107:126:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "file": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 237,
                "sourceUnit": 432,
                "src": "234:123:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "file": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 237,
                "sourceUnit": 686,
                "src": "358:123:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "file": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 237,
                "sourceUnit": 868,
                "src": "482:125:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [],
                "canonicalName": "ZPlan",
                "contractDependencies": [],
                "contractKind": "interface",
                "fullyImplemented": false,
                "id": 18,
                "linearizedBaseContracts": [
                    18
                ],
                "name": "ZPlan",
                "nameLocation": "621:5:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "7b49827a",
                        "id": 12,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getPledgeReceiptRelation",
                        "nameLocation": "642:24:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 8,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 7,
                                    "mutability": "mutable",
                                    "name": "addr",
                                    "nameLocation": "675:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 12,
                                    "src": "667:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 6,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "667:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "666:14:0"
                        },
                        "returnParameters": {
                            "id": 11,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 10,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 12,
                                    "src": "700:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 9,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "700:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "699:9:0"
                        },
                        "scope": 18,
                        "src": "633:76:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    },
                    {
                        "functionSelector": "c363c3ac",
                        "id": 17,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "removePledgeReceiptRelation",
                        "nameLocation": "723:27:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 15,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 14,
                                    "mutability": "mutable",
                                    "name": "addr",
                                    "nameLocation": "759:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 17,
                                    "src": "751:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 13,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "751:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "750:14:0"
                        },
                        "returnParameters": {
                            "id": 16,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "775:0:0"
                        },
                        "scope": 18,
                        "src": "714:62:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "external"
                    }
                ],
                "scope": 237,
                "src": "611:167:0",
                "usedErrors": [],
                "usedEvents": []
            },
            {
                "canonicalName": "redemption",
                "id": 23,
                "members": [
                    {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "time",
                        "nameLocation": "812:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "804:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 19,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "804:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "830:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 23,
                        "src": "822:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 21,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "822:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "internal"
                    }
                ],
                "name": "redemption",
                "nameLocation": "787:10:0",
                "nodeType": "StructDefinition",
                "scope": 237,
                "src": "780:58:0",
                "visibility": "public"
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 24,
                            "name": "Initializable",
                            "nameLocations": [
                                "858:13:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 685,
                            "src": "858:13:0"
                        },
                        "id": 25,
                        "nodeType": "InheritanceSpecifier",
                        "src": "858:13:0"
                    },
                    {
                        "baseName": {
                            "id": 26,
                            "name": "ERC20Upgradeable",
                            "nameLocations": [
                                "877:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1484,
                            "src": "877:16:0"
                        },
                        "id": 27,
                        "nodeType": "InheritanceSpecifier",
                        "src": "877:16:0"
                    },
                    {
                        "baseName": {
                            "id": 28,
                            "name": "OwnableUpgradeable",
                            "nameLocations": [
                                "899:18:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 431,
                            "src": "899:18:0"
                        },
                        "id": 29,
                        "nodeType": "InheritanceSpecifier",
                        "src": "899:18:0"
                    },
                    {
                        "baseName": {
                            "id": 30,
                            "name": "UUPSUpgradeable",
                            "nameLocations": [
                                "923:15:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 867,
                            "src": "923:15:0"
                        },
                        "id": 31,
                        "nodeType": "InheritanceSpecifier",
                        "src": "923:15:0"
                    }
                ],
                "canonicalName": "Z",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 236,
                "linearizedBaseContracts": [
                    236,
                    867,
                    1540,
                    431,
                    1484,
                    1582,
                    2094,
                    2068,
                    1530,
                    685
                ],
                "name": "Z",
                "nameLocation": "849:1:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "anonymous": false,
                        "eventSelector": "b82bfe429e7ad7db8aeb97116e0914af98c53d4ee8a475bb01a0b17c8778fc19",
                        "id": 37,
                        "name": "ApplyRemovePledge",
                        "nameLocation": "951:17:0",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 36,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 33,
                                    "indexed": true,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "985:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 37,
                                    "src": "969:22:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 32,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "969:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 35,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1001:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 37,
                                    "src": "993:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 34,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "993:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "968:39:0"
                        },
                        "src": "945:63:0"
                    },
                    {
                        "constant": false,
                        "id": 40,
                        "mutability": "mutable",
                        "name": "zPlanToken",
                        "nameLocation": "1020:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "1014:16:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZPlan_$18",
                            "typeString": "contract ZPlan"
                        },
                        "typeName": {
                            "id": 39,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 38,
                                "name": "ZPlan",
                                "nameLocations": [
                                    "1014:5:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 18,
                                "src": "1014:5:0"
                            },
                            "referencedDeclaration": 18,
                            "src": "1014:5:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZPlan_$18",
                                "typeString": "contract ZPlan"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "functionSelector": "7f35d71e",
                        "id": 45,
                        "mutability": "mutable",
                        "name": "redemptionRelation",
                        "nameLocation": "1074:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 236,
                        "src": "1036:56:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$23_storage_$",
                            "typeString": "mapping(address => struct redemption)"
                        },
                        "typeName": {
                            "id": 44,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 41,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1044:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "1036:30:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$23_storage_$",
                                "typeString": "mapping(address => struct redemption)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 43,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                    "id": 42,
                                    "name": "redemption",
                                    "nameLocations": [
                                        "1055:10:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 23,
                                    "src": "1055:10:0"
                                },
                                "referencedDeclaration": 23,
                                "src": "1055:10:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_redemption_$23_storage_ptr",
                                    "typeString": "struct redemption"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 52,
                            "nodeType": "Block",
                            "src": "1166:39:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 49,
                                            "name": "_disableInitializers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 653,
                                            "src": "1176:20:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 50,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1176:22:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 51,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1176:22:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 46,
                            "nodeType": "StructuredDocumentation",
                            "src": "1099:48:0",
                            "text": "@custom:oz-upgrades-unsafe-allow constructor"
                        },
                        "id": 53,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 47,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1163:2:0"
                        },
                        "returnParameters": {
                            "id": 48,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1166:0:0"
                        },
                        "scope": 236,
                        "src": "1152:53:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 71,
                            "nodeType": "Block",
                            "src": "1252:109:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "5a",
                                                "id": 59,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1275:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5",
                                                    "typeString": "literal_string \"Z\""
                                                },
                                                "value": "Z"
                                            },
                                            {
                                                "hexValue": "5a",
                                                "id": 60,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1280:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5",
                                                    "typeString": "literal_string \"Z\""
                                                },
                                                "value": "Z"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5",
                                                    "typeString": "literal_string \"Z\""
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5",
                                                    "typeString": "literal_string \"Z\""
                                                }
                                            ],
                                            "id": 58,
                                            "name": "__ERC20_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 935,
                                            "src": "1262:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory,string memory)"
                                            }
                                        },
                                        "id": 61,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1262:22:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 62,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1262:22:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 64,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1309:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 65,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "1313:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1309:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 63,
                                            "name": "__Ownable_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 291,
                                            "src": "1294:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 66,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1294:26:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 67,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1294:26:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 68,
                                            "name": "__UUPSUpgradeable_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 739,
                                            "src": "1330:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 69,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1330:24:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 70,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1330:24:0"
                                }
                            ]
                        },
                        "functionSelector": "8129fc1c",
                        "id": 72,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 56,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 55,
                                    "name": "initializer",
                                    "nameLocations": [
                                        "1240:11:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 539,
                                    "src": "1240:11:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1240:11:0"
                            }
                        ],
                        "name": "initialize",
                        "nameLocation": "1220:10:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 54,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1230:2:0"
                        },
                        "returnParameters": {
                            "id": 57,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1252:0:0"
                        },
                        "scope": 236,
                        "src": "1211:150:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 86,
                            "nodeType": "Block",
                            "src": "1426:34:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 82,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 74,
                                                "src": "1442:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 83,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 76,
                                                "src": "1446:6:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 81,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1316,
                                            "src": "1436:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 84,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1436:17:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 85,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1436:17:0"
                                }
                            ]
                        },
                        "functionSelector": "40c10f19",
                        "id": 87,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 79,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 78,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1416:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 326,
                                    "src": "1416:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1416:9:0"
                            }
                        ],
                        "name": "mint",
                        "nameLocation": "1376:4:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 77,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 74,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1389:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 87,
                                    "src": "1381:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 73,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1381:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 76,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "1401:6:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 87,
                                    "src": "1393:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 75,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1393:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1380:28:0"
                        },
                        "returnParameters": {
                            "id": 80,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1426:0:0"
                        },
                        "scope": 236,
                        "src": "1367:93:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            821
                        ],
                        "body": {
                            "id": 95,
                            "nodeType": "Block",
                            "src": "1562:2:0",
                            "statements": []
                        },
                        "id": 96,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 93,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 92,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1552:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 326,
                                    "src": "1552:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1552:9:0"
                            }
                        ],
                        "name": "_authorizeUpgrade",
                        "nameLocation": "1475:17:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 91,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1543:8:0"
                        },
                        "parameters": {
                            "id": 90,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 89,
                                    "mutability": "mutable",
                                    "name": "newImplementation",
                                    "nameLocation": "1510:17:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 96,
                                    "src": "1502:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 88,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1502:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1492:41:0"
                        },
                        "returnParameters": {
                            "id": 94,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1562:0:0"
                        },
                        "scope": 236,
                        "src": "1466:98:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 109,
                            "nodeType": "Block",
                            "src": "1624:41:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 107,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 103,
                                            "name": "zPlanToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 40,
                                            "src": "1634:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ZPlan_$18",
                                                "typeString": "contract ZPlan"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 105,
                                                    "name": "addr",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 98,
                                                    "src": "1653:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 104,
                                                "name": "ZPlan",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 18,
                                                "src": "1647:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ZPlan_$18_$",
                                                    "typeString": "type(contract ZPlan)"
                                                }
                                            },
                                            "id": 106,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1647:11:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ZPlan_$18",
                                                "typeString": "contract ZPlan"
                                            }
                                        },
                                        "src": "1634:24:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ZPlan_$18",
                                            "typeString": "contract ZPlan"
                                        }
                                    },
                                    "id": 108,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1634:24:0"
                                }
                            ]
                        },
                        "functionSelector": "3f5dea0f",
                        "id": 110,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 101,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 100,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1614:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 326,
                                    "src": "1614:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1614:9:0"
                            }
                        ],
                        "name": "setZPlanToken",
                        "nameLocation": "1579:13:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 99,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 98,
                                    "mutability": "mutable",
                                    "name": "addr",
                                    "nameLocation": "1601:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 110,
                                    "src": "1593:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 97,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1593:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1592:14:0"
                        },
                        "returnParameters": {
                            "id": 102,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1624:0:0"
                        },
                        "scope": 236,
                        "src": "1570:95:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 122,
                            "nodeType": "Block",
                            "src": "1756:49:0",
                            "statements": [
                                {
                                    "expression": {
                                        "baseExpression": {
                                            "id": 118,
                                            "name": "redemptionRelation",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 45,
                                            "src": "1773:18:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$23_storage_$",
                                                "typeString": "mapping(address => struct redemption storage ref)"
                                            }
                                        },
                                        "id": 120,
                                        "indexExpression": {
                                            "id": 119,
                                            "name": "_addr",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 112,
                                            "src": "1792:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1773:25:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_redemption_$23_storage",
                                            "typeString": "struct redemption storage ref"
                                        }
                                    },
                                    "functionReturnParameters": 117,
                                    "id": 121,
                                    "nodeType": "Return",
                                    "src": "1766:32:0"
                                }
                            ]
                        },
                        "functionSelector": "bff02570",
                        "id": 123,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getRedemptionRelation",
                        "nameLocation": "1680:21:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 113,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 112,
                                    "mutability": "mutable",
                                    "name": "_addr",
                                    "nameLocation": "1710:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 123,
                                    "src": "1702:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 111,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1702:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1701:15:0"
                        },
                        "returnParameters": {
                            "id": 117,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 116,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 123,
                                    "src": "1738:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "memory",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_redemption_$23_memory_ptr",
                                        "typeString": "struct redemption"
                                    },
                                    "typeName": {
                                        "id": 115,
                                        "nodeType": "UserDefinedTypeName",
                                        "pathNode": {
                                            "id": 114,
                                            "name": "redemption",
                                            "nameLocations": [
                                                "1738:10:0"
                                            ],
                                            "nodeType": "IdentifierPath",
                                            "referencedDeclaration": 23,
                                            "src": "1738:10:0"
                                        },
                                        "referencedDeclaration": 23,
                                        "src": "1738:10:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_redemption_$23_storage_ptr",
                                            "typeString": "struct redemption"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1737:19:0"
                        },
                        "scope": 236,
                        "src": "1671:134:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            1064
                        ],
                        "body": {
                            "id": 234,
                            "nodeType": "Block",
                            "src": "1917:994:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 136,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 125,
                                                "src": "1942:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 137,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 127,
                                                "src": "1946:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 133,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "1927:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_Z_$236_$",
                                                    "typeString": "type(contract super Z)"
                                                }
                                            },
                                            "id": 135,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1933:8:0",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1064,
                                            "src": "1927:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 138,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1927:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 139,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1927:25:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 145,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 140,
                                            "name": "to",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 125,
                                            "src": "1966:2:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 143,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "1980:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Z_$236",
                                                        "typeString": "contract Z"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_Z_$236",
                                                        "typeString": "contract Z"
                                                    }
                                                ],
                                                "id": 142,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1972:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 141,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1972:7:0",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 144,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1972:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1966:19:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 231,
                                    "nodeType": "IfStatement",
                                    "src": "1962:922:0",
                                    "trueBody": {
                                        "id": 230,
                                        "nodeType": "Block",
                                        "src": "1987:897:0",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    147
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 147,
                                                        "mutability": "mutable",
                                                        "name": "pledgeValue",
                                                        "nameLocation": "2030:11:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 230,
                                                        "src": "2022:19:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 146,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "2022:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 153,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 150,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "2097:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 151,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "2101:6:0",
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "2097:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 148,
                                                            "name": "zPlanToken",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 40,
                                                            "src": "2044:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_ZPlan_$18",
                                                                "typeString": "contract ZPlan"
                                                            }
                                                        },
                                                        "id": 149,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "2055:24:0",
                                                        "memberName": "getPledgeReceiptRelation",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 12,
                                                        "src": "2044:35:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) external returns (uint256)"
                                                        }
                                                    },
                                                    "id": 152,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2044:77:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "2022:99:0"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 157,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "id": 155,
                                                                "name": "pledgeValue",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 147,
                                                                "src": "2144:11:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": ">",
                                                            "rightExpression": {
                                                                "hexValue": "30",
                                                                "id": 156,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "number",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "2158:1:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_rational_0_by_1",
                                                                    "typeString": "int_const 0"
                                                                },
                                                                "value": "0"
                                                            },
                                                            "src": "2144:15:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        {
                                                            "hexValue": "6e6f20706c6561646765",
                                                            "id": 158,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "string",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2160:12:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_stringliteral_870157420c13c39f2fcbc0f72565e6ea047b4321a03c902ac16f46d2b73d152f",
                                                                "typeString": "literal_string \"no pleadge\""
                                                            },
                                                            "value": "no pleadge"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_stringliteral_870157420c13c39f2fcbc0f72565e6ea047b4321a03c902ac16f46d2b73d152f",
                                                                "typeString": "literal_string \"no pleadge\""
                                                            }
                                                        ],
                                                        "id": 154,
                                                        "name": "require",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [
                                                            4294967278,
                                                            4294967278
                                                        ],
                                                        "referencedDeclaration": 4294967278,
                                                        "src": "2136:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                            "typeString": "function (bool,string memory) pure"
                                                        }
                                                    },
                                                    "id": 159,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2136:37:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 160,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2136:37:0"
                                            },
                                            {
                                                "expression": {
                                                    "arguments": [
                                                        {
                                                            "commonType": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            },
                                                            "id": 166,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "leftExpression": {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 164,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "id": 162,
                                                                    "name": "pledgeValue",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 147,
                                                                    "src": "2195:11:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "/",
                                                                "rightExpression": {
                                                                    "hexValue": "3130303030",
                                                                    "id": 163,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2207:5:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_10000_by_1",
                                                                        "typeString": "int_const 10000"
                                                                    },
                                                                    "value": "10000"
                                                                },
                                                                "src": "2195:17:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "nodeType": "BinaryOperation",
                                                            "operator": "==",
                                                            "rightExpression": {
                                                                "id": 165,
                                                                "name": "value",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 127,
                                                                "src": "2214:5:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            "src": "2195:24:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            }
                                                        },
                                                        {
                                                            "hexValue": "7472616e7366657220616d6f756e74206572726f72",
                                                            "id": 167,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": true,
                                                            "kind": "string",
                                                            "lValueRequested": false,
                                                            "nodeType": "Literal",
                                                            "src": "2220:23:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_stringliteral_2251eb40a20b15c115ecbdc45026efcf8d9585211320011632b83a4a0d3a0efa",
                                                                "typeString": "literal_string \"transfer amount error\""
                                                            },
                                                            "value": "transfer amount error"
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_bool",
                                                                "typeString": "bool"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_stringliteral_2251eb40a20b15c115ecbdc45026efcf8d9585211320011632b83a4a0d3a0efa",
                                                                "typeString": "literal_string \"transfer amount error\""
                                                            }
                                                        ],
                                                        "id": 161,
                                                        "name": "require",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [
                                                            4294967278,
                                                            4294967278
                                                        ],
                                                        "referencedDeclaration": 4294967278,
                                                        "src": "2187:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                            "typeString": "function (bool,string memory) pure"
                                                        }
                                                    },
                                                    "id": 168,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2187:57:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 169,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2187:57:0"
                                            },
                                            {
                                                "assignments": [
                                                    172
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 172,
                                                        "mutability": "mutable",
                                                        "name": "item",
                                                        "nameLocation": "2277:4:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 230,
                                                        "src": "2259:22:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "memory",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_redemption_$23_memory_ptr",
                                                            "typeString": "struct redemption"
                                                        },
                                                        "typeName": {
                                                            "id": 171,
                                                            "nodeType": "UserDefinedTypeName",
                                                            "pathNode": {
                                                                "id": 170,
                                                                "name": "redemption",
                                                                "nameLocations": [
                                                                    "2259:10:0"
                                                                ],
                                                                "nodeType": "IdentifierPath",
                                                                "referencedDeclaration": 23,
                                                                "src": "2259:10:0"
                                                            },
                                                            "referencedDeclaration": 23,
                                                            "src": "2259:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_redemption_$23_storage_ptr",
                                                                "typeString": "struct redemption"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 177,
                                                "initialValue": {
                                                    "baseExpression": {
                                                        "id": 173,
                                                        "name": "redemptionRelation",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 45,
                                                        "src": "2284:18:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$23_storage_$",
                                                            "typeString": "mapping(address => struct redemption storage ref)"
                                                        }
                                                    },
                                                    "id": 176,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 174,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "2303:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 175,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "2307:6:0",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "2303:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "2284:30:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_redemption_$23_storage",
                                                        "typeString": "struct redemption storage ref"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "2259:55:0"
                                            },
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 181,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 178,
                                                            "name": "item",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 172,
                                                            "src": "2332:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_redemption_$23_memory_ptr",
                                                                "typeString": "struct redemption memory"
                                                            }
                                                        },
                                                        "id": 179,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "2337:4:0",
                                                        "memberName": "time",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 20,
                                                        "src": "2332:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": ">",
                                                    "rightExpression": {
                                                        "hexValue": "30",
                                                        "id": 180,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": true,
                                                        "kind": "number",
                                                        "lValueRequested": false,
                                                        "nodeType": "Literal",
                                                        "src": "2344:1:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_rational_0_by_1",
                                                            "typeString": "int_const 0"
                                                        },
                                                        "value": "0"
                                                    },
                                                    "src": "2332:13:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 209,
                                                "nodeType": "IfStatement",
                                                "src": "2328:330:0",
                                                "trueBody": {
                                                    "id": 208,
                                                    "nodeType": "Block",
                                                    "src": "2347:311:0",
                                                    "statements": [
                                                        {
                                                            "condition": {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 186,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "expression": {
                                                                        "id": 182,
                                                                        "name": "item",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 172,
                                                                        "src": "2369:4:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_struct$_redemption_$23_memory_ptr",
                                                                            "typeString": "struct redemption memory"
                                                                        }
                                                                    },
                                                                    "id": 183,
                                                                    "isConstant": false,
                                                                    "isLValue": true,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "2374:4:0",
                                                                    "memberName": "time",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 20,
                                                                    "src": "2369:9:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "<=",
                                                                "rightExpression": {
                                                                    "expression": {
                                                                        "id": 184,
                                                                        "name": "block",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967292,
                                                                        "src": "2382:5:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_block",
                                                                            "typeString": "block"
                                                                        }
                                                                    },
                                                                    "id": 185,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "2388:9:0",
                                                                    "memberName": "timestamp",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "2382:15:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "src": "2369:28:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "id": 203,
                                                            "nodeType": "IfStatement",
                                                            "src": "2365:217:0",
                                                            "trueBody": {
                                                                "id": 202,
                                                                "nodeType": "Block",
                                                                "src": "2399:183:0",
                                                                "statements": [
                                                                    {
                                                                        "expression": {
                                                                            "arguments": [
                                                                                {
                                                                                    "expression": {
                                                                                        "id": 190,
                                                                                        "name": "msg",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 4294967281,
                                                                                        "src": "2460:3:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_magic_message",
                                                                                            "typeString": "msg"
                                                                                        }
                                                                                    },
                                                                                    "id": 191,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "memberLocation": "2464:6:0",
                                                                                    "memberName": "sender",
                                                                                    "nodeType": "MemberAccess",
                                                                                    "src": "2460:10:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_address",
                                                                                        "typeString": "address"
                                                                                    }
                                                                                }
                                                                            ],
                                                                            "expression": {
                                                                                "argumentTypes": [
                                                                                    {
                                                                                        "typeIdentifier": "t_address",
                                                                                        "typeString": "address"
                                                                                    }
                                                                                ],
                                                                                "expression": {
                                                                                    "id": 187,
                                                                                    "name": "zPlanToken",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 40,
                                                                                    "src": "2421:10:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_contract$_ZPlan_$18",
                                                                                        "typeString": "contract ZPlan"
                                                                                    }
                                                                                },
                                                                                "id": 189,
                                                                                "isConstant": false,
                                                                                "isLValue": false,
                                                                                "isPure": false,
                                                                                "lValueRequested": false,
                                                                                "memberLocation": "2432:27:0",
                                                                                "memberName": "removePledgeReceiptRelation",
                                                                                "nodeType": "MemberAccess",
                                                                                "referencedDeclaration": 17,
                                                                                "src": "2421:38:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                                                                    "typeString": "function (address) external"
                                                                                }
                                                                            },
                                                                            "id": 192,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "kind": "functionCall",
                                                                            "lValueRequested": false,
                                                                            "nameLocations": [],
                                                                            "names": [],
                                                                            "nodeType": "FunctionCall",
                                                                            "src": "2421:50:0",
                                                                            "tryCall": false,
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_tuple$__$",
                                                                                "typeString": "tuple()"
                                                                            }
                                                                        },
                                                                        "id": 193,
                                                                        "nodeType": "ExpressionStatement",
                                                                        "src": "2421:50:0"
                                                                    },
                                                                    {
                                                                        "expression": {
                                                                            "id": 198,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "nodeType": "UnaryOperation",
                                                                            "operator": "delete",
                                                                            "prefix": true,
                                                                            "src": "2493:37:0",
                                                                            "subExpression": {
                                                                                "baseExpression": {
                                                                                    "id": 194,
                                                                                    "name": "redemptionRelation",
                                                                                    "nodeType": "Identifier",
                                                                                    "overloadedDeclarations": [],
                                                                                    "referencedDeclaration": 45,
                                                                                    "src": "2500:18:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$23_storage_$",
                                                                                        "typeString": "mapping(address => struct redemption storage ref)"
                                                                                    }
                                                                                },
                                                                                "id": 197,
                                                                                "indexExpression": {
                                                                                    "expression": {
                                                                                        "id": 195,
                                                                                        "name": "msg",
                                                                                        "nodeType": "Identifier",
                                                                                        "overloadedDeclarations": [],
                                                                                        "referencedDeclaration": 4294967281,
                                                                                        "src": "2519:3:0",
                                                                                        "typeDescriptions": {
                                                                                            "typeIdentifier": "t_magic_message",
                                                                                            "typeString": "msg"
                                                                                        }
                                                                                    },
                                                                                    "id": 196,
                                                                                    "isConstant": false,
                                                                                    "isLValue": false,
                                                                                    "isPure": false,
                                                                                    "lValueRequested": false,
                                                                                    "memberLocation": "2523:6:0",
                                                                                    "memberName": "sender",
                                                                                    "nodeType": "MemberAccess",
                                                                                    "src": "2519:10:0",
                                                                                    "typeDescriptions": {
                                                                                        "typeIdentifier": "t_address",
                                                                                        "typeString": "address"
                                                                                    }
                                                                                },
                                                                                "isConstant": false,
                                                                                "isLValue": true,
                                                                                "isPure": false,
                                                                                "lValueRequested": true,
                                                                                "nodeType": "IndexAccess",
                                                                                "src": "2500:30:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_struct$_redemption_$23_storage",
                                                                                    "typeString": "struct redemption storage ref"
                                                                                }
                                                                            },
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_tuple$__$",
                                                                                "typeString": "tuple()"
                                                                            }
                                                                        },
                                                                        "id": 199,
                                                                        "nodeType": "ExpressionStatement",
                                                                        "src": "2493:37:0"
                                                                    },
                                                                    {
                                                                        "expression": {
                                                                            "hexValue": "74727565",
                                                                            "id": 200,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "bool",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "2559:4:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_bool",
                                                                                "typeString": "bool"
                                                                            },
                                                                            "value": "true"
                                                                        },
                                                                        "functionReturnParameters": 132,
                                                                        "id": 201,
                                                                        "nodeType": "Return",
                                                                        "src": "2552:11:0"
                                                                    }
                                                                ]
                                                            }
                                                        },
                                                        {
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "hexValue": "63616e6e6f7420726564656d7074696f6e206f6e20746869732074696d65",
                                                                        "id": 205,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "string",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "2610:32:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_stringliteral_1b3486fd93fa0557692067eb1690440a5549c3198065ebab4aafd98811d93bbe",
                                                                            "typeString": "literal_string \"cannot redemption on this time\""
                                                                        },
                                                                        "value": "cannot redemption on this time"
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_stringliteral_1b3486fd93fa0557692067eb1690440a5549c3198065ebab4aafd98811d93bbe",
                                                                            "typeString": "literal_string \"cannot redemption on this time\""
                                                                        }
                                                                    ],
                                                                    "id": 204,
                                                                    "name": "revert",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [
                                                                        4294967277,
                                                                        4294967277
                                                                    ],
                                                                    "referencedDeclaration": 4294967277,
                                                                    "src": "2603:6:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                                                        "typeString": "function (string memory) pure"
                                                                    }
                                                                },
                                                                "id": 206,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "2603:40:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_tuple$__$",
                                                                    "typeString": "tuple()"
                                                                }
                                                            },
                                                            "id": 207,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "2603:40:0"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 222,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 210,
                                                            "name": "redemptionRelation",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 45,
                                                            "src": "2685:18:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$23_storage_$",
                                                                "typeString": "mapping(address => struct redemption storage ref)"
                                                            }
                                                        },
                                                        "id": 213,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 211,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "2704:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 212,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "2708:6:0",
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "2704:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2685:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_redemption_$23_storage",
                                                            "typeString": "struct redemption storage ref"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 219,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "expression": {
                                                                        "id": 215,
                                                                        "name": "block",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 4294967292,
                                                                        "src": "2746:5:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_magic_block",
                                                                            "typeString": "block"
                                                                        }
                                                                    },
                                                                    "id": 216,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "2752:9:0",
                                                                    "memberName": "timestamp",
                                                                    "nodeType": "MemberAccess",
                                                                    "src": "2746:15:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "+",
                                                                "rightExpression": {
                                                                    "components": [
                                                                        {
                                                                            "hexValue": "3630",
                                                                            "id": 217,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "2765:2:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_60_by_1",
                                                                                "typeString": "int_const 60"
                                                                            },
                                                                            "value": "60"
                                                                        }
                                                                    ],
                                                                    "id": 218,
                                                                    "isConstant": false,
                                                                    "isInlineArray": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "lValueRequested": false,
                                                                    "nodeType": "TupleExpression",
                                                                    "src": "2764:4:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_60_by_1",
                                                                        "typeString": "int_const 60"
                                                                    }
                                                                },
                                                                "src": "2746:22:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "id": 220,
                                                                "name": "pledgeValue",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 147,
                                                                "src": "2786:11:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "id": 214,
                                                            "name": "redemption",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 23,
                                                            "src": "2718:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_struct$_redemption_$23_storage_ptr_$",
                                                                "typeString": "type(struct redemption storage pointer)"
                                                            }
                                                        },
                                                        "id": 221,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "structConstructorCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2718:93:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_redemption_$23_memory_ptr",
                                                            "typeString": "struct redemption memory"
                                                        }
                                                    },
                                                    "src": "2685:126:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_redemption_$23_storage",
                                                        "typeString": "struct redemption storage ref"
                                                    }
                                                },
                                                "id": 223,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2685:126:0"
                                            },
                                            {
                                                "eventCall": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 225,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "2849:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 226,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "2853:6:0",
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "2849:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        {
                                                            "id": 227,
                                                            "name": "pledgeValue",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 147,
                                                            "src": "2861:11:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            },
                                                            {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        ],
                                                        "id": 224,
                                                        "name": "ApplyRemovePledge",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 37,
                                                        "src": "2831:17:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                            "typeString": "function (address,uint256)"
                                                        }
                                                    },
                                                    "id": 228,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2831:42:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_tuple$__$",
                                                        "typeString": "tuple()"
                                                    }
                                                },
                                                "id": 229,
                                                "nodeType": "EmitStatement",
                                                "src": "2826:47:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "hexValue": "74727565",
                                        "id": 232,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2900:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 132,
                                    "id": 233,
                                    "nodeType": "Return",
                                    "src": "2893:11:0"
                                }
                            ]
                        },
                        "functionSelector": "a9059cbb",
                        "id": 235,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nameLocation": "1820:8:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 129,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1893:8:0"
                        },
                        "parameters": {
                            "id": 128,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 125,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1846:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 235,
                                    "src": "1838:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 124,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1838:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 127,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1866:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 235,
                                    "src": "1858:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 126,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1858:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1828:49:0"
                        },
                        "returnParameters": {
                            "id": 132,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 131,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 235,
                                    "src": "1911:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 130,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1911:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1910:6:0"
                        },
                        "scope": 236,
                        "src": "1811:1100:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 237,
                "src": "840:2073:0",
                "usedErrors": [
                    267,
                    272,
                    448,
                    451,
                    712,
                    717,
                    1552,
                    1557,
                    1562,
                    1571,
                    1576,
                    1581,
                    1712,
                    1725,
                    2107,
                    2110
                ],
                "usedEvents": [
                    37,
                    278,
                    456,
                    1691,
                    2002,
                    2011
                ]
            }
        ],
        "src": "81:2833:0"
    },
    "functionHashes": {
        "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "getRedemptionRelation(address)": "bff02570",
        "initialize()": "8129fc1c",
        "mint(address,uint256)": "40c10f19",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "proxiableUUID()": "52d1902d",
        "redemptionRelation(address)": "7f35d71e",
        "renounceOwnership()": "715018a6",
        "setZPlanToken(address)": "3f5dea0f",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "upgradeToAndCall(address,bytes)": "4f1ef286"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1171000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "UPGRADE_INTERFACE_VERSION()": "infinite",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "infinite",
            "decimals()": "288",
            "getRedemptionRelation(address)": "4872",
            "initialize()": "infinite",
            "mint(address,uint256)": "infinite",
            "name()": "infinite",
            "owner()": "2389",
            "proxiableUUID()": "infinite",
            "redemptionRelation(address)": "4703",
            "renounceOwnership()": "infinite",
            "setZPlanToken(address)": "26788",
            "symbol()": "infinite",
            "totalSupply()": "2348",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28475",
            "upgradeToAndCall(address,bytes)": "infinite"
        },
        "internal": {
            "_authorizeUpgrade(address)": "infinite"
        }
    }
}