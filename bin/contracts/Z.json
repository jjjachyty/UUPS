{
    "contractName": "Z",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "target",
                    "type": "address"
                }
            ],
            "name": "AddressEmptyCode",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address"
                }
            ],
            "name": "ERC1967InvalidImplementation",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "ERC1967NonPayable",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FailedInnerCall",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "InvalidInitialization",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "NotInitializing",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "OwnableInvalidOwner",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "OwnableUnauthorizedAccount",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "UUPSUnauthorizedCallContext",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "slot",
                    "type": "bytes32"
                }
            ],
            "name": "UUPSUnsupportedProxiableUUID",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint64",
                    "name": "version",
                    "type": "uint64"
                }
            ],
            "name": "Initialized",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "implementation",
                    "type": "address"
                }
            ],
            "name": "Upgraded",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "UPGRADE_INTERFACE_VERSION",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "initialOwner",
                    "type": "address"
                }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "proxiableUUID",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "addr",
                    "type": "address"
                }
            ],
            "name": "setZPlanToken",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newImplementation",
                    "type": "address"
                },
                {
                    "internalType": "bytes",
                    "name": "data",
                    "type": "bytes"
                }
            ],
            "name": "upgradeToAndCall",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"setZPlanToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/janly/data/solidity/UUPSNew/contracts/BT2_Z.sol\":\"Z\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/janly/data/solidity/UUPSNew/contracts/BT2_Z.sol\":{\"keccak256\":\"0xef1816e73ee170313308eb005bbcc5fe7bd157ead0ec216084dbdab821d9058c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f252ade7aa7a819a1d682b60c1b73bf5091c3848ed754b3ce4d5bb90eb8471cf\",\"dweb:/ipfs/QmSipa5FnKpZqNEyL4e6p3XQVBY4scyno2vS1S6R12rZ7i\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x6b23d05aee285a12b8a1215335123e37db35d4a1a30b21dfa67c2c59be3bd31f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1795206087679c5f781091f3d1946950f3ea65d376440f8b7daf1b9037aa7990\",\"dweb:/ipfs/QmQEp2A7wPpS9QPycuXpoRg3L7bR5vSYBi9osBzbgHphmL\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x2e8e2745e465acaaa9bad6ff8a9be79b0916b1bb463887fd27adb8d1f05e371b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a8d3eea9a25358e2568f76de0ee1f8d3d3912d36707bb13f2737faeb8fe3a95\",\"dweb:/ipfs/QmX63sYBmPiKuiZvQSDxPo51aFBV7NEcqjqaUeeyxCfGDK\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
    "bytecode": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516114cd6100f95f395f81816109cc015281816109f50152610b3401526114cd5ff3fe6080604052600436106100fa575f3560e01c806370a0823111610092578063a9059cbb11610062578063a9059cbb146102c4578063ad3cb1cc146102e3578063c4d66de814610313578063dd62ed3e14610332578063f2fde38b14610351575f80fd5b806370a0823114610216578063715018a6146102565780638da5cb5b1461026a57806395d89b41146102b0575f80fd5b8063313ce567116100cd578063313ce567146101b35780633f5dea0f146101ce5780634f1ef286146101ef57806352d1902d14610202575f80fd5b806306fdde03146100fe578063095ea7b31461012857806318160ddd1461015757806323b872dd14610194575b5f80fd5b348015610109575f80fd5b50610112610370565b60405161011f91906110c8565b60405180910390f35b348015610133575f80fd5b50610147610142366004611115565b610430565b604051901515815260200161011f565b348015610162575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b60405190815260200161011f565b34801561019f575f80fd5b506101476101ae36600461113d565b610449565b3480156101be575f80fd5b506040516012815260200161011f565b3480156101d9575f80fd5b506101ed6101e8366004611176565b61046e565b005b6101ed6101fd3660046111a3565b610497565b34801561020d575f80fd5b506101866104b6565b348015610221575f80fd5b50610186610230366004611176565b6001600160a01b03165f9081525f80516020611458833981519152602052604090205490565b348015610261575f80fd5b506101ed6104d1565b348015610275575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b03909116815260200161011f565b3480156102bb575f80fd5b506101126104e4565b3480156102cf575f80fd5b506101476102de366004611115565b610522565b3480156102ee575f80fd5b50610112604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561031e575f80fd5b506101ed61032d366004611176565b6106b7565b34801561033d575f80fd5b5061018661034c36600461125f565b610809565b34801561035c575f80fd5b506101ed61036b366004611176565b610852565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f80516020611458833981519152916103ae90611290565b80601f01602080910402602001604051908101604052809291908181526020018280546103da90611290565b80156104255780601f106103fc57610100808354040283529160200191610425565b820191905f5260205f20905b81548152906001019060200180831161040857829003601f168201915b505050505091505090565b5f3361043d818585610894565b60019150505b92915050565b5f336104568582856108a6565b610461858585610909565b60019150505b9392505050565b610476610966565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b61049f6109c1565b6104a882610a65565b6104b28282610a6d565b5050565b5f6104bf610b29565b505f8051602061147883398151915290565b6104d9610966565b6104e25f610b72565b565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020611458833981519152916103ae90611290565b5f61052d8383610be2565b50306001600160a01b038416036106ae57335f90815260016020818152604092839020835180850190945280548085529201549083015242116105ec575f54602082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303815f875af11580156105bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e191906112c8565b506001915050610443565b5f8054604051633da4c13d60e11b81523360048201526001600160a01b0390911690637b49827a90602401602060405180830381865afa158015610632573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065691906112e7565b905060405180604001604052804260186106709190611312565b61067b90603c611312565b61068690603c611312565b8152602090810192909252335f90815260018084526040909120825181559190920151910155505b50600192915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156106fc5750825b90505f8267ffffffffffffffff1660011480156107185750303b155b905081158015610726575080155b156107445760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561076e57845460ff60401b1916600160401b1785555b6107aa604051806040016040528060018152602001602d60f91b815250604051806040016040528060018152602001602d60f91b815250610bef565b6107b386610c01565b6107bb610c12565b831561080157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61085a610966565b6001600160a01b03811661088857604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61089181610b72565b50565b6108a18383836001610c1a565b505050565b5f6108b18484610809565b90505f19811461090357818110156108f557604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161087f565b61090384848484035f610c1a565b50505050565b6001600160a01b03831661093257604051634b637e8f60e11b81525f600482015260240161087f565b6001600160a01b03821661095b5760405163ec442f0560e01b81525f600482015260240161087f565b6108a1838383610cfe565b336109987f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146104e25760405163118cdaa760e01b815233600482015260240161087f565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610a4757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a3b5f80516020611478833981519152546001600160a01b031690565b6001600160a01b031614155b156104e25760405163703e46dd60e11b815260040160405180910390fd5b610891610966565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ac7575060408051601f3d908101601f19168201909252610ac4918101906112e7565b60015b610aef57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161087f565b5f805160206114788339815191528114610b1f57604051632a87526960e21b81526004810182905260240161087f565b6108a18383610e37565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e25760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f3361043d818585610909565b610bf7610e8c565b6104b28282610ed5565b610c09610e8c565b61089181610f25565b6104e2610e8c565b5f805160206114588339815191526001600160a01b038516610c515760405163e602df0560e01b81525f600482015260240161087f565b6001600160a01b038416610c7a57604051634a1406b160e11b81525f600482015260240161087f565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115610cf757836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610cee91815260200190565b60405180910390a35b5050505050565b5f805160206114588339815191526001600160a01b038416610d385781816002015f828254610d2d9190611329565b90915550610da89050565b6001600160a01b0384165f9081526020829052604090205482811015610d8a5760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161087f565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316610dc6576002810180548390039055610de4565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2991815260200190565b60405180910390a350505050565b610e4082610f2d565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115610e84576108a18282610f90565b6104b2611002565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166104e257604051631afcd79f60e31b815260040160405180910390fd5b610edd610e8c565b5f805160206114588339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03610f168482611380565b50600481016109038382611380565b61085a610e8c565b806001600160a01b03163b5f03610f6257604051634c9c8ce360e01b81526001600160a01b038216600482015260240161087f565b5f8051602061147883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051610fac919061143c565b5f60405180830381855af49150503d805f8114610fe4576040519150601f19603f3d011682016040523d82523d5f602084013e610fe9565b606091505b5091509150610ff9858383611021565b95945050505050565b34156104e25760405163b398979f60e01b815260040160405180910390fd5b606082611036576110318261107d565b610467565b815115801561104d57506001600160a01b0384163b155b1561107657604051639996b31560e01b81526001600160a01b038516600482015260240161087f565b5080610467565b80511561108d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f5b838110156110c05781810151838201526020016110a8565b50505f910152565b602081525f82518060208401526110e68160408501602087016110a6565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611110575f80fd5b919050565b5f8060408385031215611126575f80fd5b61112f836110fa565b946020939093013593505050565b5f805f6060848603121561114f575f80fd5b611158846110fa565b9250611166602085016110fa565b9150604084013590509250925092565b5f60208284031215611186575f80fd5b610467826110fa565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156111b4575f80fd5b6111bd836110fa565b9150602083013567ffffffffffffffff808211156111d9575f80fd5b818501915085601f8301126111ec575f80fd5b8135818111156111fe576111fe61118f565b604051601f8201601f19908116603f011681019083821181831017156112265761122661118f565b8160405282815288602084870101111561123e575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f8060408385031215611270575f80fd5b611279836110fa565b9150611287602084016110fa565b90509250929050565b600181811c908216806112a457607f821691505b6020821081036112c257634e487b7160e01b5f52602260045260245ffd5b50919050565b5f602082840312156112d8575f80fd5b81518015158114610467575f80fd5b5f602082840312156112f7575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610443576104436112fe565b80820180821115610443576104436112fe565b601f8211156108a157805f5260205f20601f840160051c810160208510156113615750805b601f840160051c820191505b81811015610cf7575f815560010161136d565b815167ffffffffffffffff81111561139a5761139a61118f565b6113ae816113a88454611290565b8461133c565b602080601f8311600181146113e1575f84156113ca5750858301515b5f19600386901b1c1916600185901b178555610801565b5f85815260208120601f198616915b8281101561140f578886015182559484019460019091019084016113f0565b508582101561142c57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f825161144d8184602087016110a6565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212206bf58c62109836f04bd4d2e10332334b00084ecc1d1e03744d2dc4ed542f875164736f6c63430008180033",
    "deployedBytecode": "6080604052600436106100fa575f3560e01c806370a0823111610092578063a9059cbb11610062578063a9059cbb146102c4578063ad3cb1cc146102e3578063c4d66de814610313578063dd62ed3e14610332578063f2fde38b14610351575f80fd5b806370a0823114610216578063715018a6146102565780638da5cb5b1461026a57806395d89b41146102b0575f80fd5b8063313ce567116100cd578063313ce567146101b35780633f5dea0f146101ce5780634f1ef286146101ef57806352d1902d14610202575f80fd5b806306fdde03146100fe578063095ea7b31461012857806318160ddd1461015757806323b872dd14610194575b5f80fd5b348015610109575f80fd5b50610112610370565b60405161011f91906110c8565b60405180910390f35b348015610133575f80fd5b50610147610142366004611115565b610430565b604051901515815260200161011f565b348015610162575f80fd5b507f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace02545b60405190815260200161011f565b34801561019f575f80fd5b506101476101ae36600461113d565b610449565b3480156101be575f80fd5b506040516012815260200161011f565b3480156101d9575f80fd5b506101ed6101e8366004611176565b61046e565b005b6101ed6101fd3660046111a3565b610497565b34801561020d575f80fd5b506101866104b6565b348015610221575f80fd5b50610186610230366004611176565b6001600160a01b03165f9081525f80516020611458833981519152602052604090205490565b348015610261575f80fd5b506101ed6104d1565b348015610275575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546040516001600160a01b03909116815260200161011f565b3480156102bb575f80fd5b506101126104e4565b3480156102cf575f80fd5b506101476102de366004611115565b610522565b3480156102ee575f80fd5b50610112604051806040016040528060058152602001640352e302e360dc1b81525081565b34801561031e575f80fd5b506101ed61032d366004611176565b6106b7565b34801561033d575f80fd5b5061018661034c36600461125f565b610809565b34801561035c575f80fd5b506101ed61036b366004611176565b610852565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0380546060915f80516020611458833981519152916103ae90611290565b80601f01602080910402602001604051908101604052809291908181526020018280546103da90611290565b80156104255780601f106103fc57610100808354040283529160200191610425565b820191905f5260205f20905b81548152906001019060200180831161040857829003601f168201915b505050505091505090565b5f3361043d818585610894565b60019150505b92915050565b5f336104568582856108a6565b610461858585610909565b60019150505b9392505050565b610476610966565b5f80546001600160a01b0319166001600160a01b0392909216919091179055565b61049f6109c1565b6104a882610a65565b6104b28282610a6d565b5050565b5f6104bf610b29565b505f8051602061147883398151915290565b6104d9610966565b6104e25f610b72565b565b7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace0480546060915f80516020611458833981519152916103ae90611290565b5f61052d8383610be2565b50306001600160a01b038416036106ae57335f90815260016020818152604092839020835180850190945280548085529201549083015242116105ec575f54602082015160405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb906044016020604051808303815f875af11580156105bd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105e191906112c8565b506001915050610443565b5f8054604051633da4c13d60e11b81523360048201526001600160a01b0390911690637b49827a90602401602060405180830381865afa158015610632573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065691906112e7565b905060405180604001604052804260186106709190611312565b61067b90603c611312565b61068690603c611312565b8152602090810192909252335f90815260018084526040909120825181559190920151910155505b50600192915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156106fc5750825b90505f8267ffffffffffffffff1660011480156107185750303b155b905081158015610726575080155b156107445760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561076e57845460ff60401b1916600160401b1785555b6107aa604051806040016040528060018152602001602d60f91b815250604051806040016040528060018152602001602d60f91b815250610bef565b6107b386610c01565b6107bb610c12565b831561080157845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6001600160a01b039182165f9081527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace016020908152604080832093909416825291909152205490565b61085a610966565b6001600160a01b03811661088857604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61089181610b72565b50565b6108a18383836001610c1a565b505050565b5f6108b18484610809565b90505f19811461090357818110156108f557604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161087f565b61090384848484035f610c1a565b50505050565b6001600160a01b03831661093257604051634b637e8f60e11b81525f600482015260240161087f565b6001600160a01b03821661095b5760405163ec442f0560e01b81525f600482015260240161087f565b6108a1838383610cfe565b336109987f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146104e25760405163118cdaa760e01b815233600482015260240161087f565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610a4757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a3b5f80516020611478833981519152546001600160a01b031690565b6001600160a01b031614155b156104e25760405163703e46dd60e11b815260040160405180910390fd5b610891610966565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610ac7575060408051601f3d908101601f19168201909252610ac4918101906112e7565b60015b610aef57604051634c9c8ce360e01b81526001600160a01b038316600482015260240161087f565b5f805160206114788339815191528114610b1f57604051632a87526960e21b81526004810182905260240161087f565b6108a18383610e37565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e25760405163703e46dd60e11b815260040160405180910390fd5b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f3361043d818585610909565b610bf7610e8c565b6104b28282610ed5565b610c09610e8c565b61089181610f25565b6104e2610e8c565b5f805160206114588339815191526001600160a01b038516610c515760405163e602df0560e01b81525f600482015260240161087f565b6001600160a01b038416610c7a57604051634a1406b160e11b81525f600482015260240161087f565b6001600160a01b038086165f90815260018301602090815260408083209388168352929052208390558115610cf757836001600160a01b0316856001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610cee91815260200190565b60405180910390a35b5050505050565b5f805160206114588339815191526001600160a01b038416610d385781816002015f828254610d2d9190611329565b90915550610da89050565b6001600160a01b0384165f9081526020829052604090205482811015610d8a5760405163391434e360e21b81526001600160a01b0386166004820152602481018290526044810184905260640161087f565b6001600160a01b0385165f9081526020839052604090209083900390555b6001600160a01b038316610dc6576002810180548390039055610de4565b6001600160a01b0383165f9081526020829052604090208054830190555b826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610e2991815260200190565b60405180910390a350505050565b610e4082610f2d565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115610e84576108a18282610f90565b6104b2611002565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166104e257604051631afcd79f60e31b815260040160405180910390fd5b610edd610e8c565b5f805160206114588339815191527f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace03610f168482611380565b50600481016109038382611380565b61085a610e8c565b806001600160a01b03163b5f03610f6257604051634c9c8ce360e01b81526001600160a01b038216600482015260240161087f565b5f8051602061147883398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051610fac919061143c565b5f60405180830381855af49150503d805f8114610fe4576040519150601f19603f3d011682016040523d82523d5f602084013e610fe9565b606091505b5091509150610ff9858383611021565b95945050505050565b34156104e25760405163b398979f60e01b815260040160405180910390fd5b606082611036576110318261107d565b610467565b815115801561104d57506001600160a01b0384163b155b1561107657604051639996b31560e01b81526001600160a01b038516600482015260240161087f565b5080610467565b80511561108d5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f5b838110156110c05781810151838201526020016110a8565b50505f910152565b602081525f82518060208401526110e68160408501602087016110a6565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114611110575f80fd5b919050565b5f8060408385031215611126575f80fd5b61112f836110fa565b946020939093013593505050565b5f805f6060848603121561114f575f80fd5b611158846110fa565b9250611166602085016110fa565b9150604084013590509250925092565b5f60208284031215611186575f80fd5b610467826110fa565b634e487b7160e01b5f52604160045260245ffd5b5f80604083850312156111b4575f80fd5b6111bd836110fa565b9150602083013567ffffffffffffffff808211156111d9575f80fd5b818501915085601f8301126111ec575f80fd5b8135818111156111fe576111fe61118f565b604051601f8201601f19908116603f011681019083821181831017156112265761122661118f565b8160405282815288602084870101111561123e575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f8060408385031215611270575f80fd5b611279836110fa565b9150611287602084016110fa565b90509250929050565b600181811c908216806112a457607f821691505b6020821081036112c257634e487b7160e01b5f52602260045260245ffd5b50919050565b5f602082840312156112d8575f80fd5b81518015158114610467575f80fd5b5f602082840312156112f7575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610443576104436112fe565b80820180821115610443576104436112fe565b601f8211156108a157805f5260205f20601f840160051c810160208510156113615750805b601f840160051c820191505b81811015610cf7575f815560010161136d565b815167ffffffffffffffff81111561139a5761139a61118f565b6113ae816113a88454611290565b8461133c565b602080601f8311600181146113e1575f84156113ca5750858301515b5f19600386901b1c1916600185901b178555610801565b5f85815260208120601f198616915b8281101561140f578886015182559484019460019091019084016113f0565b508582101561142c57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b5f825161144d8184602087016110a6565b919091019291505056fe52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca26469706673582212206bf58c62109836f04bd4d2e10332334b00084ecc1d1e03744d2dc4ed542f875164736f6c63430008180033",
    "sourceMap": "823:1399:0:-:0;;;1267:4:3;1224:48;;1059:53:0;;;;;;;;;-1:-1:-1;1083:22:0;:20;:22::i;:::-;823:1399;;7711:422:2;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:2;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:2;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:2;-1:-1:-1;;;;;8035:33:2;;;;;8087:29;;158:50:14;;;8087:29:2;;146:2:14;131:18;8087:29:2;;;;;;;7981:146;7760:373;7711:422::o;14:200:14:-;823:1399:0;;;;;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "823:1399:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:144:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5649:186;;;;;;;;;;-1:-1:-1;5649:186:4;;;;;:::i;:::-;;:::i;:::-;;;1272:14:14;;1265:22;1247:41;;1235:2;1220:18;5649:186:4;1107:187:14;4335:152:4;;;;;;;;;;-1:-1:-1;4466:14:4;;4335:152;;;1445:25:14;;;1433:2;1418:18;4335:152:4;1299:177:14;6395:244:4;;;;;;;;;;-1:-1:-1;6395:244:4;;;;;:::i;:::-;;:::i;4193:82::-;;;;;;;;;;-1:-1:-1;4193:82:4;;4266:2;1956:36:14;;1944:2;1929:18;4193:82:4;1814:184:14;1400:95:0;;;;;;;;;;-1:-1:-1;1400:95:0;;;;;:::i;:::-;;:::i;:::-;;4254:214:3;;;;;;:::i;:::-;;:::i;3801:134::-;;;;;;;;;;;;;:::i;4545:171:4:-;;;;;;;;;;-1:-1:-1;4545:171:4;;;;;:::i;:::-;-1:-1:-1;;;;;4689:20:4;4610:7;4689:20;;;-1:-1:-1;;;;;;;;;;;4689:20:4;;;;;;;4545:171;3155:101:1;;;;;;;;;;;;;:::i;2441:144::-;;;;;;;;;;-1:-1:-1;1313:22:1;2570:8;2441:144;;-1:-1:-1;;;;;2570:8:1;;;3654:51:14;;3642:2;3627:18;2441:144:1;3508:203:14;3412:148:4;;;;;;;;;;;;;:::i;1501:719:0:-;;;;;;;;;;-1:-1:-1;1501:719:0;;;;;:::i;:::-;;:::i;1915:58:3:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1915:58:3;;;;;1118:172:0;;;;;;;;;;-1:-1:-1;1118:172:0;;;;;:::i;:::-;;:::i;5147:195:4:-;;;;;;;;;;-1:-1:-1;5147:195:4;;;;;:::i;:::-;;:::i;3405:215:1:-;;;;;;;;;;-1:-1:-1;3405:215:1;;;;;:::i;:::-;;:::i;3155:144:4:-;3285:7;3278:14;;3200:13;;-1:-1:-1;;;;;;;;;;;2503:20:4;3278:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3155:144;:::o;5649:186::-;5722:4;966:10:5;5776:31:4;966:10:5;5792:7:4;5801:5;5776:8;:31::i;:::-;5824:4;5817:11;;;5649:186;;;;;:::o;6395:244::-;6482:4;966:10:5;6538:37:4;6554:4;966:10:5;6569:5:4;6538:15;:37::i;:::-;6585:26;6595:4;6601:2;6605:5;6585:9;:26::i;:::-;6628:4;6621:11;;;6395:244;;;;;;:::o;1400:95:0:-;2334:13:1;:11;:13::i;:::-;1464:10:0::1;:24:::0;;-1:-1:-1;;;;;;1464:24:0::1;-1:-1:-1::0;;;;;1464:24:0;;;::::1;::::0;;;::::1;::::0;;1400:95::o;4254:214:3:-;2749:13;:11;:13::i;:::-;4369:36:::1;4387:17;4369;:36::i;:::-;4415:46;4437:17;4456:4;4415:21;:46::i;:::-;4254:214:::0;;:::o;3801:134::-;3870:7;3020:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3801:134:3;:::o;3155:101:1:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;3412:148:4:-;3544:9;3537:16;;3459:13;;-1:-1:-1;;;;;;;;;;;2503:20:4;3537:16;;;:::i;1501:719:0:-;1601:4;1617:25;1632:2;1636:5;1617:14;:25::i;:::-;-1:-1:-1;1670:4:0;-1:-1:-1;;;;;1656:19:0;;;1652:541;;1757:10;1713:22;1738:30;;;:18;:30;;;;;;;;;1713:55;;;;;;;;;;;;;;;;;;;;1799:15;-1:-1:-1;1782:139:0;;1834:10;;1866;;;;1834:43;;-1:-1:-1;;;1834:43:0;;1854:10;1834:43;;;4540:51:14;4607:18;;;4600:34;;;;-1:-1:-1;;;;;1834:10:0;;;;:19;;4513:18:14;;1834:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1902:4;1895:11;;;;;1782:139;1935:19;1957:10;;:77;;-1:-1:-1;;;1957:77:0;;2010:10;1957:77;;;3654:51:14;-1:-1:-1;;;;;1957:10:0;;;;:35;;3627:18:14;;1957:77:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1935:99;;2081:101;;;;;;;;2109:15;2127:2;2109:20;;;;:::i;:::-;:25;;2132:2;2109:25;:::i;:::-;:30;;2137:2;2109:30;:::i;:::-;2081:101;;;;;;;;;;2067:10;-1:-1:-1;2048:30:0;;;:18;:30;;;;;;;:134;;;;;;;;;;;;-1:-1:-1;1652:541:0;-1:-1:-1;2209:4:0;1501:719;;;;:::o;1118:172::-;8870:21:2;4302:15;;-1:-1:-1;;;4302:15:2;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:2;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:2;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:2;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:2;-1:-1:-1;;;5013:22:2;;;4979:67;1189:22:0::1;;;;;;;;;;;;;;-1:-1:-1::0;;;1189:22:0::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;1189:22:0::1;;::::0;:12:::1;:22::i;:::-;1221:28;1236:12;1221:14;:28::i;:::-;1259:24;:22;:24::i;:::-;5070:14:2::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:2;;;5142:14;;-1:-1:-1;5574:50:14;;5142:14:2;;5562:2:14;5547:18;5142:14:2;;;;;;;5066:101;4092:1081;;;;;1118:172:0;:::o;5147:195:4:-;-1:-1:-1;;;;;5306:20:4;;;5227:7;5306:20;;;:13;:20;;;;;;;;:29;;;;;;;;;;;;;5147:195::o;3405:215:1:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:1;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:1;;3562:1:::1;3534:31;::::0;::::1;3654:51:14::0;3627:18;;3534:31:1::1;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;10408:128:4:-;10492:37;10501:5;10508:7;10517:5;10524:4;10492:8;:37::i;:::-;10408:128;;;:::o;12137:477::-;12236:24;12263:25;12273:5;12280:7;12263:9;:25::i;:::-;12236:52;;-1:-1:-1;;12302:16:4;:37;12298:310;;12378:5;12359:16;:24;12355:130;;;12410:60;;-1:-1:-1;;;12410:60:4;;-1:-1:-1;;;;;5855:32:14;;12410:60:4;;;5837:51:14;5904:18;;;5897:34;;;5947:18;;;5940:34;;;5810:18;;12410:60:4;5635:345:14;12355:130:4;12526:57;12535:5;12542:7;12570:5;12551:16;:24;12577:5;12526:8;:57::i;:::-;12226:388;12137:477;;;:::o;7012:300::-;-1:-1:-1;;;;;7095:18:4;;7091:86;;7136:30;;-1:-1:-1;;;7136:30:4;;7163:1;7136:30;;;3654:51:14;3627:18;;7136:30:4;3508:203:14;7091:86:4;-1:-1:-1;;;;;7190:16:4;;7186:86;;7229:32;;-1:-1:-1;;;7229:32:4;;7258:1;7229:32;;;3654:51:14;3627:18;;7229:32:4;3508:203:14;7186:86:4;7281:24;7289:4;7295:2;7299:5;7281:7;:24::i;2658:162:1:-;966:10:5;2717:7:1;1313:22;2570:8;-1:-1:-1;;;;;2570:8:1;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:1;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:1;;966:10:5;2763:40:1;;;3654:51:14;3627:18;;2763:40:1;3508:203:14;4695:312:3;4775:4;-1:-1:-1;;;;;4784:6:3;4767:23;;;:120;;;4881:6;-1:-1:-1;;;;;4845:42:3;:32;-1:-1:-1;;;;;;;;;;;2035:53:8;-1:-1:-1;;;;;2035:53:8;;1957:138;4845:32:3;-1:-1:-1;;;;;4845:42:3;;;4767:120;4750:251;;;4961:29;;-1:-1:-1;;;4961:29:3;;;;;;;;;;;1296:98:0;2334:13:1;:11;:13::i;6148:538:3:-;6265:17;-1:-1:-1;;;;;6247:50:3;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6247:52:3;;;;;;;;-1:-1:-1;;6247:52:3;;;;;;;;;;;;:::i;:::-;;;6243:437;;6609:60;;-1:-1:-1;;;6609:60:3;;-1:-1:-1;;;;;3672:32:14;;6609:60:3;;;3654:51:14;3627:18;;6609:60:3;3508:203:14;6243:437:3;-1:-1:-1;;;;;;;;;;;6341:40:3;;6337:120;;6408:34;;-1:-1:-1;;;6408:34:3;;;;;1445:25:14;;;1418:18;;6408:34:3;1299:177:14;6337:120:3;6470:54;6500:17;6519:4;6470:29;:54::i;5124:213::-;5198:4;-1:-1:-1;;;;;5207:6:3;5190:23;;5186:145;;5291:29;;-1:-1:-1;;;5291:29:3;;;;;;;;;;;3774:248:1;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:1;;-1:-1:-1;;;;;3941:19:1;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;4911:178:4:-;4980:4;966:10:5;5034:27:4;966:10:5;5051:2:4;5055:5;5034:9;:27::i;2721:147::-;6931:20:2;:18;:20::i;:::-;2823:38:4::1;2846:5;2853:7;2823:22;:38::i;1847:127:1:-:0;6931:20:2;:18;:20::i;:::-;1929:38:1::1;1954:12;1929:24;:38::i;3064:67:3:-:0;6931:20:2;:18;:20::i;11368:487:4:-;-1:-1:-1;;;;;;;;;;;;;;;;11533:19:4;;11529:89;;11575:32;;-1:-1:-1;;;11575:32:4;;11604:1;11575:32;;;3654:51:14;3627:18;;11575:32:4;3508:203:14;11529:89:4;-1:-1:-1;;;;;11631:21:4;;11627:90;;11675:31;;-1:-1:-1;;;11675:31:4;;11703:1;11675:31;;;3654:51:14;3627:18;;11675:31:4;3508:203:14;11627:90:4;-1:-1:-1;;;;;11726:20:4;;;;;;;:13;;;:20;;;;;;;;:29;;;;;;;;;:37;;;11773:76;;;;11823:7;-1:-1:-1;;;;;11807:31:4;11816:5;-1:-1:-1;;;;;11807:31:4;;11832:5;11807:31;;;;1445:25:14;;1433:2;1418:18;;1299:177;11807:31:4;;;;;;;;11773:76;11466:389;11368:487;;;;:::o;7627:1170::-;-1:-1:-1;;;;;;;;;;;;;;;;7769:18:4;;7765:546;;7923:5;7905:1;:14;;;:23;;;;;;;:::i;:::-;;;;-1:-1:-1;7765:546:4;;-1:-1:-1;7765:546:4;;-1:-1:-1;;;;;7981:17:4;;7959:19;7981:17;;;;;;;;;;;8016:19;;;8012:115;;;8062:50;;-1:-1:-1;;;8062:50:4;;-1:-1:-1;;;;;5855:32:14;;8062:50:4;;;5837:51:14;5904:18;;;5897:34;;;5947:18;;;5940:34;;;5810:18;;8062:50:4;5635:345:14;8012:115:4;-1:-1:-1;;;;;8247:17:4;;:11;:17;;;;;;;;;;8267:19;;;;8247:39;;7765:546;-1:-1:-1;;;;;8325:16:4;;8321:429;;8488:14;;;:23;;;;;;;8321:429;;;-1:-1:-1;;;;;8701:15:4;;:11;:15;;;;;;;;;;:24;;;;;;8321:429;8780:2;-1:-1:-1;;;;;8765:25:4;8774:4;-1:-1:-1;;;;;8765:25:4;;8784:5;8765:25;;;;1445::14;;1433:2;1418:18;;1299:177;8765:25:4;;;;;;;;7702:1095;7627:1170;;;:::o;2779:335:8:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:8;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:2:-;8870:21;8560:40;-1:-1:-1;;;8560:40:2;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:2;;;;;;;;;;;2874:216:4;6931:20:2;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;3039:7:4;:15:::1;3049:5:::0;3039:7;:15:::1;:::i;:::-;-1:-1:-1::0;3064:9:4::1;::::0;::::1;:19;3076:7:::0;3064:9;:19:::1;:::i;1980:235:1:-:0;6931:20:2;:18;:20::i;2186:281:8:-;2263:17;-1:-1:-1;;;;;2263:29:8;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:8;;-1:-1:-1;;;;;3672:32:14;;2320:47:8;;;3654:51:14;3627:18;;2320:47:8;3508:203:14;2259:119:8;-1:-1:-1;;;;;;;;;;;2387:73:8;;-1:-1:-1;;;;;;2387:73:8;-1:-1:-1;;;;;2387:73:8;;;;;;;;;;2186:281::o;4106:253:12:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:12;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:12:o;6598:122:8:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:8;;;;;;;;;;;4625:582:12;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:12;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:12;;-1:-1:-1;;;;;3672:32:14;;5121:24:12;;;3654:51:14;3627:18;;5121:24:12;3508:203:14;5041:119:12;-1:-1:-1;5180:10:12;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:12;;;;;;;;;;;14:250:14;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:14;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:14;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:14:o;670:173::-;738:20;;-1:-1:-1;;;;;787:31:14;;777:42;;767:70;;833:1;830;823:12;767:70;670:173;;;:::o;848:254::-;916:6;924;977:2;965:9;956:7;952:23;948:32;945:52;;;993:1;990;983:12;945:52;1016:29;1035:9;1016:29;:::i;:::-;1006:39;1092:2;1077:18;;;;1064:32;;-1:-1:-1;;;848:254:14:o;1481:328::-;1558:6;1566;1574;1627:2;1615:9;1606:7;1602:23;1598:32;1595:52;;;1643:1;1640;1633:12;1595:52;1666:29;1685:9;1666:29;:::i;:::-;1656:39;;1714:38;1748:2;1737:9;1733:18;1714:38;:::i;:::-;1704:48;;1799:2;1788:9;1784:18;1771:32;1761:42;;1481:328;;;;;:::o;2003:186::-;2062:6;2115:2;2103:9;2094:7;2090:23;2086:32;2083:52;;;2131:1;2128;2121:12;2083:52;2154:29;2173:9;2154:29;:::i;2194:127::-;2255:10;2250:3;2246:20;2243:1;2236:31;2286:4;2283:1;2276:15;2310:4;2307:1;2300:15;2326:995;2403:6;2411;2464:2;2452:9;2443:7;2439:23;2435:32;2432:52;;;2480:1;2477;2470:12;2432:52;2503:29;2522:9;2503:29;:::i;:::-;2493:39;;2583:2;2572:9;2568:18;2555:32;2606:18;2647:2;2639:6;2636:14;2633:34;;;2663:1;2660;2653:12;2633:34;2701:6;2690:9;2686:22;2676:32;;2746:7;2739:4;2735:2;2731:13;2727:27;2717:55;;2768:1;2765;2758:12;2717:55;2804:2;2791:16;2826:2;2822;2819:10;2816:36;;;2832:18;;:::i;:::-;2907:2;2901:9;2875:2;2961:13;;-1:-1:-1;;2957:22:14;;;2981:2;2953:31;2949:40;2937:53;;;3005:18;;;3025:22;;;3002:46;2999:72;;;3051:18;;:::i;:::-;3091:10;3087:2;3080:22;3126:2;3118:6;3111:18;3166:7;3161:2;3156;3152;3148:11;3144:20;3141:33;3138:53;;;3187:1;3184;3177:12;3138:53;3243:2;3238;3234;3230:11;3225:2;3217:6;3213:15;3200:46;3288:1;3283:2;3278;3270:6;3266:15;3262:24;3255:35;3309:6;3299:16;;;;;;;2326:995;;;;;:::o;3716:260::-;3784:6;3792;3845:2;3833:9;3824:7;3820:23;3816:32;3813:52;;;3861:1;3858;3851:12;3813:52;3884:29;3903:9;3884:29;:::i;:::-;3874:39;;3932:38;3966:2;3955:9;3951:18;3932:38;:::i;:::-;3922:48;;3716:260;;;;;:::o;3981:380::-;4060:1;4056:12;;;;4103;;;4124:61;;4178:4;4170:6;4166:17;4156:27;;4124:61;4231:2;4223:6;4220:14;4200:18;4197:38;4194:161;;4277:10;4272:3;4268:20;4265:1;4258:31;4312:4;4309:1;4302:15;4340:4;4337:1;4330:15;4194:161;;3981:380;;;:::o;4645:277::-;4712:6;4765:2;4753:9;4744:7;4740:23;4736:32;4733:52;;;4781:1;4778;4771:12;4733:52;4813:9;4807:16;4866:5;4859:13;4852:21;4845:5;4842:32;4832:60;;4888:1;4885;4878:12;4927:184;4997:6;5050:2;5038:9;5029:7;5025:23;5021:32;5018:52;;;5066:1;5063;5056:12;5018:52;-1:-1:-1;5089:16:14;;4927:184;-1:-1:-1;4927:184:14:o;5116:127::-;5177:10;5172:3;5168:20;5165:1;5158:31;5208:4;5205:1;5198:15;5232:4;5229:1;5222:15;5248:168;5321:9;;;5352;;5369:15;;;5363:22;;5349:37;5339:71;;5390:18;;:::i;6174:125::-;6239:9;;;6260:10;;;6257:36;;;6273:18;;:::i;6430:518::-;6532:2;6527:3;6524:11;6521:421;;;6568:5;6565:1;6558:16;6612:4;6609:1;6599:18;6682:2;6670:10;6666:19;6663:1;6659:27;6653:4;6649:38;6718:4;6706:10;6703:20;6700:47;;;-1:-1:-1;6741:4:14;6700:47;6796:2;6791:3;6787:12;6784:1;6780:20;6774:4;6770:31;6760:41;;6851:81;6869:2;6862:5;6859:13;6851:81;;;6928:1;6914:16;;6895:1;6884:13;6851:81;;7124:1345;7250:3;7244:10;7277:18;7269:6;7266:30;7263:56;;;7299:18;;:::i;:::-;7328:97;7418:6;7378:38;7410:4;7404:11;7378:38;:::i;:::-;7372:4;7328:97;:::i;:::-;7480:4;;7537:2;7526:14;;7554:1;7549:663;;;;8256:1;8273:6;8270:89;;;-1:-1:-1;8325:19:14;;;8319:26;8270:89;-1:-1:-1;;7081:1:14;7077:11;;;7073:24;7069:29;7059:40;7105:1;7101:11;;;7056:57;8372:81;;7519:944;;7549:663;6377:1;6370:14;;;6414:4;6401:18;;-1:-1:-1;;7585:20:14;;;7703:236;7717:7;7714:1;7711:14;7703:236;;;7806:19;;;7800:26;7785:42;;7898:27;;;;7866:1;7854:14;;;;7733:19;;7703:236;;;7707:3;7967:6;7958:7;7955:19;7952:201;;;8028:19;;;8022:26;-1:-1:-1;;8111:1:14;8107:14;;;8123:3;8103:24;8099:37;8095:42;8080:58;8065:74;;7952:201;-1:-1:-1;;;;;8199:1:14;8183:14;;;8179:22;8166:36;;-1:-1:-1;7124:1345:14:o;8474:287::-;8603:3;8641:6;8635:13;8657:66;8716:6;8711:3;8704:4;8696:6;8692:17;8657:66;:::i;:::-;8739:16;;;;;8474:287;-1:-1:-1;;8474:287:14:o",
    "sourcePath": "/Users/janly/data/solidity/UUPSNew/contracts/BT2_Z.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.24+commit.e11b9ed9"
    },
    "ast": {
        "absolutePath": "/Users/janly/data/solidity/UUPSNew/contracts/BT2_Z.sol",
        "exportedSymbols": {
            "ContextUpgradeable": [
                1461
            ],
            "ERC1967Utils": [
                1911
            ],
            "ERC20Upgradeable": [
                1415
            ],
            "IERC1822Proxiable": [
                1471
            ],
            "IERC20": [
                1999
            ],
            "IERC20Errors": [
                1513
            ],
            "IERC20Metadata": [
                2025
            ],
            "Initializable": [
                616
            ],
            "OwnableUpgradeable": [
                362
            ],
            "UUPSUpgradeable": [
                798
            ],
            "Z": [
                167
            ],
            "ZPlan": [
                15
            ],
            "redemption": [
                20
            ]
        },
        "id": 168,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                ],
                "nodeType": "PragmaDirective",
                "src": "81:24:0"
            },
            {
                "absolutePath": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "file": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
                "id": 2,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 168,
                "sourceUnit": 1416,
                "src": "107:126:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "file": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 168,
                "sourceUnit": 363,
                "src": "234:123:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "file": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
                "id": 4,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 168,
                "sourceUnit": 617,
                "src": "358:123:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "file": "/Users/janly/data/solidity/UUPSNew/node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
                "id": 5,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 168,
                "sourceUnit": 799,
                "src": "482:125:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": true,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 6,
                            "name": "ERC20Upgradeable",
                            "nameLocations": [
                                "636:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1415,
                            "src": "636:16:0"
                        },
                        "id": 7,
                        "nodeType": "InheritanceSpecifier",
                        "src": "636:16:0"
                    }
                ],
                "canonicalName": "ZPlan",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": false,
                "id": 15,
                "linearizedBaseContracts": [
                    15,
                    1415,
                    1513,
                    2025,
                    1999,
                    1461,
                    616
                ],
                "name": "ZPlan",
                "nameLocation": "627:5:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "functionSelector": "7b49827a",
                        "id": 14,
                        "implemented": false,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getPledgeReceiptRelation",
                        "nameLocation": "668:24:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 10,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 9,
                                    "mutability": "mutable",
                                    "name": "addr",
                                    "nameLocation": "710:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 14,
                                    "src": "702:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 8,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "702:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "692:28:0"
                        },
                        "returnParameters": {
                            "id": 13,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 12,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 14,
                                    "src": "750:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 11,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "750:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "749:9:0"
                        },
                        "scope": 15,
                        "src": "659:100:0",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 168,
                "src": "609:152:0",
                "usedErrors": [
                    379,
                    382,
                    1483,
                    1488,
                    1493,
                    1502,
                    1507,
                    1512
                ],
                "usedEvents": [
                    387,
                    1933,
                    1942
                ]
            },
            {
                "canonicalName": "redemption",
                "id": 20,
                "members": [
                    {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "time",
                        "nameLocation": "795:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "787:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 16,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "787:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "813:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "805:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 18,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "805:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "internal"
                    }
                ],
                "name": "redemption",
                "nameLocation": "770:10:0",
                "nodeType": "StructDefinition",
                "scope": 168,
                "src": "763:58:0",
                "visibility": "public"
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 21,
                            "name": "Initializable",
                            "nameLocations": [
                                "841:13:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 616,
                            "src": "841:13:0"
                        },
                        "id": 22,
                        "nodeType": "InheritanceSpecifier",
                        "src": "841:13:0"
                    },
                    {
                        "baseName": {
                            "id": 23,
                            "name": "ERC20Upgradeable",
                            "nameLocations": [
                                "860:16:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1415,
                            "src": "860:16:0"
                        },
                        "id": 24,
                        "nodeType": "InheritanceSpecifier",
                        "src": "860:16:0"
                    },
                    {
                        "baseName": {
                            "id": 25,
                            "name": "OwnableUpgradeable",
                            "nameLocations": [
                                "882:18:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 362,
                            "src": "882:18:0"
                        },
                        "id": 26,
                        "nodeType": "InheritanceSpecifier",
                        "src": "882:18:0"
                    },
                    {
                        "baseName": {
                            "id": 27,
                            "name": "UUPSUpgradeable",
                            "nameLocations": [
                                "906:15:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 798,
                            "src": "906:15:0"
                        },
                        "id": 28,
                        "nodeType": "InheritanceSpecifier",
                        "src": "906:15:0"
                    }
                ],
                "canonicalName": "Z",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 167,
                "linearizedBaseContracts": [
                    167,
                    798,
                    1471,
                    362,
                    1415,
                    1513,
                    2025,
                    1999,
                    1461,
                    616
                ],
                "name": "Z",
                "nameLocation": "832:1:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "zPlanToken",
                        "nameLocation": "934:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 167,
                        "src": "928:16:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZPlan_$15",
                            "typeString": "contract ZPlan"
                        },
                        "typeName": {
                            "id": 30,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                                "id": 29,
                                "name": "ZPlan",
                                "nameLocations": [
                                    "928:5:0"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 15,
                                "src": "928:5:0"
                            },
                            "referencedDeclaration": 15,
                            "src": "928:5:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZPlan_$15",
                                "typeString": "contract ZPlan"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "redemptionRelation",
                        "nameLocation": "981:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 167,
                        "src": "950:49:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$20_storage_$",
                            "typeString": "mapping(address => struct redemption)"
                        },
                        "typeName": {
                            "id": 35,
                            "keyName": "",
                            "keyNameLocation": "-1:-1:-1",
                            "keyType": {
                                "id": 32,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "958:7:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "950:30:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$20_storage_$",
                                "typeString": "mapping(address => struct redemption)"
                            },
                            "valueName": "",
                            "valueNameLocation": "-1:-1:-1",
                            "valueType": {
                                "id": 34,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                    "id": 33,
                                    "name": "redemption",
                                    "nameLocations": [
                                        "969:10:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 20,
                                    "src": "969:10:0"
                                },
                                "referencedDeclaration": 20,
                                "src": "969:10:0",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_redemption_$20_storage_ptr",
                                    "typeString": "struct redemption"
                                }
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 43,
                            "nodeType": "Block",
                            "src": "1073:39:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 40,
                                            "name": "_disableInitializers",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 584,
                                            "src": "1083:20:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 41,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1083:22:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 42,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1083:22:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 37,
                            "nodeType": "StructuredDocumentation",
                            "src": "1006:48:0",
                            "text": "@custom:oz-upgrades-unsafe-allow constructor"
                        },
                        "id": 44,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 38,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1070:2:0"
                        },
                        "returnParameters": {
                            "id": 39,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1073:0:0"
                        },
                        "scope": 167,
                        "src": "1059:53:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 63,
                            "nodeType": "Block",
                            "src": "1179:111:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "hexValue": "5a",
                                                "id": 52,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1202:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5",
                                                    "typeString": "literal_string \"Z\""
                                                },
                                                "value": "Z"
                                            },
                                            {
                                                "hexValue": "5a",
                                                "id": 53,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1207:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5",
                                                    "typeString": "literal_string \"Z\""
                                                },
                                                "value": "Z"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5",
                                                    "typeString": "literal_string \"Z\""
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_7d54a4ab605dc825939ee59b4af5be4680f51892ef5944365e996fd93f70a2e5",
                                                    "typeString": "literal_string \"Z\""
                                                }
                                            ],
                                            "id": 51,
                                            "name": "__ERC20_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 866,
                                            "src": "1189:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (string memory,string memory)"
                                            }
                                        },
                                        "id": 54,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1189:22:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 55,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1189:22:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 57,
                                                "name": "initialOwner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 46,
                                                "src": "1236:12:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "id": 56,
                                            "name": "__Ownable_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 222,
                                            "src": "1221:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                                "typeString": "function (address)"
                                            }
                                        },
                                        "id": 58,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1221:28:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 59,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1221:28:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [],
                                        "expression": {
                                            "argumentTypes": [],
                                            "id": 60,
                                            "name": "__UUPSUpgradeable_init",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 670,
                                            "src": "1259:22:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                                                "typeString": "function ()"
                                            }
                                        },
                                        "id": 61,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1259:24:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 62,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1259:24:0"
                                }
                            ]
                        },
                        "functionSelector": "c4d66de8",
                        "id": 64,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 49,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 48,
                                    "name": "initializer",
                                    "nameLocations": [
                                        "1167:11:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 470,
                                    "src": "1167:11:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1167:11:0"
                            }
                        ],
                        "name": "initialize",
                        "nameLocation": "1127:10:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 47,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 46,
                                    "mutability": "mutable",
                                    "name": "initialOwner",
                                    "nameLocation": "1146:12:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 64,
                                    "src": "1138:20:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 45,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1138:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1137:22:0"
                        },
                        "returnParameters": {
                            "id": 50,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1179:0:0"
                        },
                        "scope": 167,
                        "src": "1118:172:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            752
                        ],
                        "body": {
                            "id": 72,
                            "nodeType": "Block",
                            "src": "1392:2:0",
                            "statements": []
                        },
                        "id": 73,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 70,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 69,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1382:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 257,
                                    "src": "1382:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1382:9:0"
                            }
                        ],
                        "name": "_authorizeUpgrade",
                        "nameLocation": "1305:17:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 68,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1373:8:0"
                        },
                        "parameters": {
                            "id": 67,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 66,
                                    "mutability": "mutable",
                                    "name": "newImplementation",
                                    "nameLocation": "1340:17:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 73,
                                    "src": "1332:25:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 65,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1332:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1322:41:0"
                        },
                        "returnParameters": {
                            "id": 71,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1392:0:0"
                        },
                        "scope": 167,
                        "src": "1296:98:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 86,
                            "nodeType": "Block",
                            "src": "1454:41:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 84,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 80,
                                            "name": "zPlanToken",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 31,
                                            "src": "1464:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ZPlan_$15",
                                                "typeString": "contract ZPlan"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "id": 82,
                                                    "name": "addr",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 75,
                                                    "src": "1483:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                ],
                                                "id": 81,
                                                "name": "ZPlan",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 15,
                                                "src": "1477:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_ZPlan_$15_$",
                                                    "typeString": "type(contract ZPlan)"
                                                }
                                            },
                                            "id": 83,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1477:11:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_ZPlan_$15",
                                                "typeString": "contract ZPlan"
                                            }
                                        },
                                        "src": "1464:24:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_ZPlan_$15",
                                            "typeString": "contract ZPlan"
                                        }
                                    },
                                    "id": 85,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1464:24:0"
                                }
                            ]
                        },
                        "functionSelector": "3f5dea0f",
                        "id": 87,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 78,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 77,
                                    "name": "onlyOwner",
                                    "nameLocations": [
                                        "1444:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 257,
                                    "src": "1444:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1444:9:0"
                            }
                        ],
                        "name": "setZPlanToken",
                        "nameLocation": "1409:13:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 76,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 75,
                                    "mutability": "mutable",
                                    "name": "addr",
                                    "nameLocation": "1431:4:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 87,
                                    "src": "1423:12:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 74,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1423:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1422:14:0"
                        },
                        "returnParameters": {
                            "id": 79,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1454:0:0"
                        },
                        "scope": 167,
                        "src": "1400:95:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            995
                        ],
                        "body": {
                            "id": 165,
                            "nodeType": "Block",
                            "src": "1607:613:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 100,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 89,
                                                "src": "1632:2:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 101,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 91,
                                                "src": "1636:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 97,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "1617:5:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_Z_$167_$",
                                                    "typeString": "type(contract super Z)"
                                                }
                                            },
                                            "id": 99,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "1623:8:0",
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 995,
                                            "src": "1617:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                "typeString": "function (address,uint256) returns (bool)"
                                            }
                                        },
                                        "id": 102,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1617:25:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 103,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1617:25:0"
                                },
                                {
                                    "condition": {
                                        "commonType": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        },
                                        "id": 109,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                            "id": 104,
                                            "name": "to",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 89,
                                            "src": "1656:2:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "==",
                                        "rightExpression": {
                                            "arguments": [
                                                {
                                                    "id": 107,
                                                    "name": "this",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967268,
                                                    "src": "1670:4:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_contract$_Z_$167",
                                                        "typeString": "contract Z"
                                                    }
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_contract$_Z_$167",
                                                        "typeString": "contract Z"
                                                    }
                                                ],
                                                "id": 106,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "1662:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_address_$",
                                                    "typeString": "type(address)"
                                                },
                                                "typeName": {
                                                    "id": 105,
                                                    "name": "address",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "1662:7:0",
                                                    "typeDescriptions": {}
                                                }
                                            },
                                            "id": 108,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1662:13:0",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1656:19:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 162,
                                    "nodeType": "IfStatement",
                                    "src": "1652:541:0",
                                    "trueBody": {
                                        "id": 161,
                                        "nodeType": "Block",
                                        "src": "1677:516:0",
                                        "statements": [
                                            {
                                                "assignments": [
                                                    112
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 112,
                                                        "mutability": "mutable",
                                                        "name": "item",
                                                        "nameLocation": "1731:4:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 161,
                                                        "src": "1713:22:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "memory",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_redemption_$20_memory_ptr",
                                                            "typeString": "struct redemption"
                                                        },
                                                        "typeName": {
                                                            "id": 111,
                                                            "nodeType": "UserDefinedTypeName",
                                                            "pathNode": {
                                                                "id": 110,
                                                                "name": "redemption",
                                                                "nameLocations": [
                                                                    "1713:10:0"
                                                                ],
                                                                "nodeType": "IdentifierPath",
                                                                "referencedDeclaration": 20,
                                                                "src": "1713:10:0"
                                                            },
                                                            "referencedDeclaration": 20,
                                                            "src": "1713:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_redemption_$20_storage_ptr",
                                                                "typeString": "struct redemption"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 117,
                                                "initialValue": {
                                                    "baseExpression": {
                                                        "id": 113,
                                                        "name": "redemptionRelation",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 36,
                                                        "src": "1738:18:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$20_storage_$",
                                                            "typeString": "mapping(address => struct redemption storage ref)"
                                                        }
                                                    },
                                                    "id": 116,
                                                    "indexExpression": {
                                                        "expression": {
                                                            "id": 114,
                                                            "name": "msg",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967281,
                                                            "src": "1757:3:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_message",
                                                                "typeString": "msg"
                                                            }
                                                        },
                                                        "id": 115,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1761:6:0",
                                                        "memberName": "sender",
                                                        "nodeType": "MemberAccess",
                                                        "src": "1757:10:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "1738:30:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_redemption_$20_storage",
                                                        "typeString": "struct redemption storage ref"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "1713:55:0"
                                            },
                                            {
                                                "condition": {
                                                    "commonType": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    "id": 122,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftExpression": {
                                                        "expression": {
                                                            "id": 118,
                                                            "name": "item",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 112,
                                                            "src": "1786:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_redemption_$20_memory_ptr",
                                                                "typeString": "struct redemption memory"
                                                            }
                                                        },
                                                        "id": 119,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1791:4:0",
                                                        "memberName": "time",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 17,
                                                        "src": "1786:9:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "nodeType": "BinaryOperation",
                                                    "operator": ">=",
                                                    "rightExpression": {
                                                        "expression": {
                                                            "id": 120,
                                                            "name": "block",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 4294967292,
                                                            "src": "1799:5:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_magic_block",
                                                                "typeString": "block"
                                                            }
                                                        },
                                                        "id": 121,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1805:9:0",
                                                        "memberName": "timestamp",
                                                        "nodeType": "MemberAccess",
                                                        "src": "1799:15:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    },
                                                    "src": "1786:28:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "id": 135,
                                                "nodeType": "IfStatement",
                                                "src": "1782:139:0",
                                                "trueBody": {
                                                    "id": 134,
                                                    "nodeType": "Block",
                                                    "src": "1816:105:0",
                                                    "statements": [
                                                        {
                                                            "expression": {
                                                                "arguments": [
                                                                    {
                                                                        "expression": {
                                                                            "id": 126,
                                                                            "name": "msg",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 4294967281,
                                                                            "src": "1854:3:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_magic_message",
                                                                                "typeString": "msg"
                                                                            }
                                                                        },
                                                                        "id": 127,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberLocation": "1858:6:0",
                                                                        "memberName": "sender",
                                                                        "nodeType": "MemberAccess",
                                                                        "src": "1854:10:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        }
                                                                    },
                                                                    {
                                                                        "expression": {
                                                                            "id": 128,
                                                                            "name": "item",
                                                                            "nodeType": "Identifier",
                                                                            "overloadedDeclarations": [],
                                                                            "referencedDeclaration": 112,
                                                                            "src": "1866:4:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_struct$_redemption_$20_memory_ptr",
                                                                                "typeString": "struct redemption memory"
                                                                            }
                                                                        },
                                                                        "id": 129,
                                                                        "isConstant": false,
                                                                        "isLValue": true,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "memberLocation": "1871:5:0",
                                                                        "memberName": "value",
                                                                        "nodeType": "MemberAccess",
                                                                        "referencedDeclaration": 19,
                                                                        "src": "1866:10:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    }
                                                                ],
                                                                "expression": {
                                                                    "argumentTypes": [
                                                                        {
                                                                            "typeIdentifier": "t_address",
                                                                            "typeString": "address"
                                                                        },
                                                                        {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    ],
                                                                    "expression": {
                                                                        "id": 123,
                                                                        "name": "zPlanToken",
                                                                        "nodeType": "Identifier",
                                                                        "overloadedDeclarations": [],
                                                                        "referencedDeclaration": 31,
                                                                        "src": "1834:10:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_contract$_ZPlan_$15",
                                                                            "typeString": "contract ZPlan"
                                                                        }
                                                                    },
                                                                    "id": 125,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "memberLocation": "1845:8:0",
                                                                    "memberName": "transfer",
                                                                    "nodeType": "MemberAccess",
                                                                    "referencedDeclaration": 995,
                                                                    "src": "1834:19:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                                                        "typeString": "function (address,uint256) external returns (bool)"
                                                                    }
                                                                },
                                                                "id": 130,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "kind": "functionCall",
                                                                "lValueRequested": false,
                                                                "nameLocations": [],
                                                                "names": [],
                                                                "nodeType": "FunctionCall",
                                                                "src": "1834:43:0",
                                                                "tryCall": false,
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                }
                                                            },
                                                            "id": 131,
                                                            "nodeType": "ExpressionStatement",
                                                            "src": "1834:43:0"
                                                        },
                                                        {
                                                            "expression": {
                                                                "hexValue": "74727565",
                                                                "id": 132,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "kind": "bool",
                                                                "lValueRequested": false,
                                                                "nodeType": "Literal",
                                                                "src": "1902:4:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_bool",
                                                                    "typeString": "bool"
                                                                },
                                                                "value": "true"
                                                            },
                                                            "functionReturnParameters": 96,
                                                            "id": 133,
                                                            "nodeType": "Return",
                                                            "src": "1895:11:0"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "assignments": [
                                                    137
                                                ],
                                                "declarations": [
                                                    {
                                                        "constant": false,
                                                        "id": 137,
                                                        "mutability": "mutable",
                                                        "name": "pledgeValue",
                                                        "nameLocation": "1943:11:0",
                                                        "nodeType": "VariableDeclaration",
                                                        "scope": 161,
                                                        "src": "1935:19:0",
                                                        "stateVariable": false,
                                                        "storageLocation": "default",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        },
                                                        "typeName": {
                                                            "id": 136,
                                                            "name": "uint256",
                                                            "nodeType": "ElementaryTypeName",
                                                            "src": "1935:7:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_uint256",
                                                                "typeString": "uint256"
                                                            }
                                                        },
                                                        "visibility": "internal"
                                                    }
                                                ],
                                                "id": 143,
                                                "initialValue": {
                                                    "arguments": [
                                                        {
                                                            "expression": {
                                                                "id": 140,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "2010:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 141,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "2014:6:0",
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "2010:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 138,
                                                            "name": "zPlanToken",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 31,
                                                            "src": "1957:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_ZPlan_$15",
                                                                "typeString": "contract ZPlan"
                                                            }
                                                        },
                                                        "id": 139,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberLocation": "1968:24:0",
                                                        "memberName": "getPledgeReceiptRelation",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 14,
                                                        "src": "1957:35:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) view external returns (uint256)"
                                                        }
                                                    },
                                                    "id": 142,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "nameLocations": [],
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "1957:77:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "VariableDeclarationStatement",
                                                "src": "1935:99:0"
                                            },
                                            {
                                                "expression": {
                                                    "id": 159,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "leftHandSide": {
                                                        "baseExpression": {
                                                            "id": 144,
                                                            "name": "redemptionRelation",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 36,
                                                            "src": "2048:18:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_redemption_$20_storage_$",
                                                                "typeString": "mapping(address => struct redemption storage ref)"
                                                            }
                                                        },
                                                        "id": 147,
                                                        "indexExpression": {
                                                            "expression": {
                                                                "id": 145,
                                                                "name": "msg",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 4294967281,
                                                                "src": "2067:3:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_magic_message",
                                                                    "typeString": "msg"
                                                                }
                                                            },
                                                            "id": 146,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "lValueRequested": false,
                                                            "memberLocation": "2071:6:0",
                                                            "memberName": "sender",
                                                            "nodeType": "MemberAccess",
                                                            "src": "2067:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        },
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": true,
                                                        "nodeType": "IndexAccess",
                                                        "src": "2048:30:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_redemption_$20_storage",
                                                            "typeString": "struct redemption storage ref"
                                                        }
                                                    },
                                                    "nodeType": "Assignment",
                                                    "operator": "=",
                                                    "rightHandSide": {
                                                        "arguments": [
                                                            {
                                                                "commonType": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                "id": 156,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": false,
                                                                "lValueRequested": false,
                                                                "leftExpression": {
                                                                    "commonType": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    },
                                                                    "id": 154,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": false,
                                                                    "lValueRequested": false,
                                                                    "leftExpression": {
                                                                        "commonType": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        },
                                                                        "id": 152,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": false,
                                                                        "lValueRequested": false,
                                                                        "leftExpression": {
                                                                            "expression": {
                                                                                "id": 149,
                                                                                "name": "block",
                                                                                "nodeType": "Identifier",
                                                                                "overloadedDeclarations": [],
                                                                                "referencedDeclaration": 4294967292,
                                                                                "src": "2109:5:0",
                                                                                "typeDescriptions": {
                                                                                    "typeIdentifier": "t_magic_block",
                                                                                    "typeString": "block"
                                                                                }
                                                                            },
                                                                            "id": 150,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": false,
                                                                            "lValueRequested": false,
                                                                            "memberLocation": "2115:9:0",
                                                                            "memberName": "timestamp",
                                                                            "nodeType": "MemberAccess",
                                                                            "src": "2109:15:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_uint256",
                                                                                "typeString": "uint256"
                                                                            }
                                                                        },
                                                                        "nodeType": "BinaryOperation",
                                                                        "operator": "*",
                                                                        "rightExpression": {
                                                                            "hexValue": "3234",
                                                                            "id": 151,
                                                                            "isConstant": false,
                                                                            "isLValue": false,
                                                                            "isPure": true,
                                                                            "kind": "number",
                                                                            "lValueRequested": false,
                                                                            "nodeType": "Literal",
                                                                            "src": "2127:2:0",
                                                                            "typeDescriptions": {
                                                                                "typeIdentifier": "t_rational_24_by_1",
                                                                                "typeString": "int_const 24"
                                                                            },
                                                                            "value": "24"
                                                                        },
                                                                        "src": "2109:20:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_uint256",
                                                                            "typeString": "uint256"
                                                                        }
                                                                    },
                                                                    "nodeType": "BinaryOperation",
                                                                    "operator": "*",
                                                                    "rightExpression": {
                                                                        "hexValue": "3630",
                                                                        "id": 153,
                                                                        "isConstant": false,
                                                                        "isLValue": false,
                                                                        "isPure": true,
                                                                        "kind": "number",
                                                                        "lValueRequested": false,
                                                                        "nodeType": "Literal",
                                                                        "src": "2132:2:0",
                                                                        "typeDescriptions": {
                                                                            "typeIdentifier": "t_rational_60_by_1",
                                                                            "typeString": "int_const 60"
                                                                        },
                                                                        "value": "60"
                                                                    },
                                                                    "src": "2109:25:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_uint256",
                                                                        "typeString": "uint256"
                                                                    }
                                                                },
                                                                "nodeType": "BinaryOperation",
                                                                "operator": "*",
                                                                "rightExpression": {
                                                                    "hexValue": "3630",
                                                                    "id": 155,
                                                                    "isConstant": false,
                                                                    "isLValue": false,
                                                                    "isPure": true,
                                                                    "kind": "number",
                                                                    "lValueRequested": false,
                                                                    "nodeType": "Literal",
                                                                    "src": "2137:2:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_rational_60_by_1",
                                                                        "typeString": "int_const 60"
                                                                    },
                                                                    "value": "60"
                                                                },
                                                                "src": "2109:30:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            },
                                                            {
                                                                "id": 157,
                                                                "name": "pledgeValue",
                                                                "nodeType": "Identifier",
                                                                "overloadedDeclarations": [],
                                                                "referencedDeclaration": 137,
                                                                "src": "2157:11:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            }
                                                        ],
                                                        "expression": {
                                                            "argumentTypes": [
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                },
                                                                {
                                                                    "typeIdentifier": "t_uint256",
                                                                    "typeString": "uint256"
                                                                }
                                                            ],
                                                            "id": 148,
                                                            "name": "redemption",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 20,
                                                            "src": "2081:10:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_type$_t_struct$_redemption_$20_storage_ptr_$",
                                                                "typeString": "type(struct redemption storage pointer)"
                                                            }
                                                        },
                                                        "id": 158,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "kind": "structConstructorCall",
                                                        "lValueRequested": false,
                                                        "nameLocations": [],
                                                        "names": [],
                                                        "nodeType": "FunctionCall",
                                                        "src": "2081:101:0",
                                                        "tryCall": false,
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_redemption_$20_memory_ptr",
                                                            "typeString": "struct redemption memory"
                                                        }
                                                    },
                                                    "src": "2048:134:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_redemption_$20_storage",
                                                        "typeString": "struct redemption storage ref"
                                                    }
                                                },
                                                "id": 160,
                                                "nodeType": "ExpressionStatement",
                                                "src": "2048:134:0"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "expression": {
                                        "hexValue": "74727565",
                                        "id": 163,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2209:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 96,
                                    "id": 164,
                                    "nodeType": "Return",
                                    "src": "2202:11:0"
                                }
                            ]
                        },
                        "functionSelector": "a9059cbb",
                        "id": 166,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "transfer",
                        "nameLocation": "1510:8:0",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 93,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "1583:8:0"
                        },
                        "parameters": {
                            "id": 92,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 89,
                                    "mutability": "mutable",
                                    "name": "to",
                                    "nameLocation": "1536:2:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 166,
                                    "src": "1528:10:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 88,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1528:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 91,
                                    "mutability": "mutable",
                                    "name": "value",
                                    "nameLocation": "1556:5:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 166,
                                    "src": "1548:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 90,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1548:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1518:49:0"
                        },
                        "returnParameters": {
                            "id": 96,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 95,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 166,
                                    "src": "1601:4:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 94,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1601:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1600:6:0"
                        },
                        "scope": 167,
                        "src": "1501:719:0",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "public"
                    }
                ],
                "scope": 168,
                "src": "823:1399:0",
                "usedErrors": [
                    198,
                    203,
                    379,
                    382,
                    643,
                    648,
                    1483,
                    1488,
                    1493,
                    1502,
                    1507,
                    1512,
                    1643,
                    1656,
                    2038,
                    2041
                ],
                "usedEvents": [
                    209,
                    387,
                    1622,
                    1933,
                    1942
                ]
            }
        ],
        "src": "81:2142:0"
    },
    "functionHashes": {
        "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "initialize(address)": "c4d66de8",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "proxiableUUID()": "52d1902d",
        "renounceOwnership()": "715018a6",
        "setZPlanToken(address)": "3f5dea0f",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "upgradeToAndCall(address,bytes)": "4f1ef286"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "1065000",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "UPGRADE_INTERFACE_VERSION()": "infinite",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "infinite",
            "balanceOf(address)": "infinite",
            "decimals()": "199",
            "initialize(address)": "infinite",
            "name()": "infinite",
            "owner()": "2367",
            "proxiableUUID()": "infinite",
            "renounceOwnership()": "infinite",
            "setZPlanToken(address)": "26810",
            "symbol()": "infinite",
            "totalSupply()": "2348",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28475",
            "upgradeToAndCall(address,bytes)": "infinite"
        },
        "internal": {
            "_authorizeUpgrade(address)": "infinite"
        }
    }
}