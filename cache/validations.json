{
  "version": "3.2",
  "log": [
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST1111": {
        "src": "contracts/dotty copy.sol:366",
        "version": {
          "withMetadata": "699583337327a8179bbcb3bd0ec20e33266c2ef00b339ed3abaa05f1657b02bc",
          "withoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44",
          "linkedWithoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend()",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "setSwapOrDividend(uint256)",
          "_swapDividendTokens()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "589f56040e0297a8172ef53fd83c0dbf6118d3755fa18ef79259e13190e86c64",
          "withoutMetadata": "2e5ef7a5d899102cb61e7de9b039c071143fc259076aade0d21845bf13849736",
          "linkedWithoutMetadata": "2e5ef7a5d899102cb61e7de9b039c071143fc259076aade0d21845bf13849736"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "transfer(address,uint256)",
          "setOverflowTakeFee(uint256)",
          "setBurnStopAt(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "setSwapOrDividend(uint256)",
          "holderAt(uint256)",
          "holdeRremove(address)",
          "HolderAdd(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()",
          "tranferBatch(address[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)8779",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)8779": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST1111": {
        "src": "contracts/dotty copy.sol:366",
        "version": {
          "withMetadata": "699583337327a8179bbcb3bd0ec20e33266c2ef00b339ed3abaa05f1657b02bc",
          "withoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44",
          "linkedWithoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend()",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "setSwapOrDividend(uint256)",
          "_swapDividendTokens()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "a891ee99fc7d06851a0ab0f3da7fae6a907f1aab691c4489a3203e80b55d5d07",
          "withoutMetadata": "0ae2f4787a6d2d21abed795309713c5dcf80502c06c404ed04515b890cdbac7e",
          "linkedWithoutMetadata": "0ae2f4787a6d2d21abed795309713c5dcf80502c06c404ed04515b890cdbac7e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "transfer(address,uint256)",
          "setOverflowTakeFee(uint256)",
          "setBurnStopAt(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "setSwapOrDividend(uint256)",
          "holderAt(uint256)",
          "holdeRremove(address)",
          "HolderAdd(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()",
          "tranferBatch(address[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)8779",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)8779": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST1111": {
        "src": "contracts/dotty copy.sol:366",
        "version": {
          "withMetadata": "699583337327a8179bbcb3bd0ec20e33266c2ef00b339ed3abaa05f1657b02bc",
          "withoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44",
          "linkedWithoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend()",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "setSwapOrDividend(uint256)",
          "_swapDividendTokens()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "09bc01fd073cc3b93987776fd566bc6c6d2f764d8cc1a2b27a380e70e89829f2",
          "withoutMetadata": "17d324f532c4dd763cd09e420858aab28bbb29e62961980df594c2c0200f737a",
          "linkedWithoutMetadata": "17d324f532c4dd763cd09e420858aab28bbb29e62961980df594c2c0200f737a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "transfer(address,uint256)",
          "setBurnStopAt(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "setSwapOrDividend(uint256)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)8779",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)8779": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST1111": {
        "src": "contracts/dotty copy.sol:366",
        "version": {
          "withMetadata": "699583337327a8179bbcb3bd0ec20e33266c2ef00b339ed3abaa05f1657b02bc",
          "withoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44",
          "linkedWithoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend()",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "setSwapOrDividend(uint256)",
          "_swapDividendTokens()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "c9b26905c2ab2bb037a7210ee11fa32e7e32076a23c02915e9a177ddc3bffa49",
          "withoutMetadata": "24b862d594763faa190533898d619e783cdfa09a1ce233b70c6afa3f493b8c45",
          "linkedWithoutMetadata": "24b862d594763faa190533898d619e783cdfa09a1ce233b70c6afa3f493b8c45"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "transfer(address,uint256)",
          "setBurnStopAt(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "setSwapOrDividend(uint256)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)8779",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)8779": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST1111": {
        "src": "contracts/dotty copy.sol:366",
        "version": {
          "withMetadata": "699583337327a8179bbcb3bd0ec20e33266c2ef00b339ed3abaa05f1657b02bc",
          "withoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44",
          "linkedWithoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend()",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "setSwapOrDividend(uint256)",
          "_swapDividendTokens()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "f1e77f3c44e6d0888e5f481ddc9ce3a4d00f0cec271e3a45182126522fe6637f",
          "withoutMetadata": "805a7de6252c007e8b7468cb48a20f47d72207811e1b0ba9cfdb72a848840bf7",
          "linkedWithoutMetadata": "805a7de6252c007e8b7468cb48a20f47d72207811e1b0ba9cfdb72a848840bf7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "transfer(address,uint256)",
          "setBurnStopAt(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "setSwapOrDividend(uint256)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)8779",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)8779": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST1111": {
        "src": "contracts/dotty copy.sol:366",
        "version": {
          "withMetadata": "699583337327a8179bbcb3bd0ec20e33266c2ef00b339ed3abaa05f1657b02bc",
          "withoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44",
          "linkedWithoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend()",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "setSwapOrDividend(uint256)",
          "_swapDividendTokens()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST1111",
              "src": "contracts/dotty copy.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "375db43c07a80629035860553b0bd7e5b340d050b4d933f4a3184254dc2e91b3",
          "withoutMetadata": "f19747d78afe911e96cb229afa4ccb26c7960460575477868f4f316d5506831c",
          "linkedWithoutMetadata": "f19747d78afe911e96cb229afa4ccb26c7960460575477868f4f316d5506831c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "transfer(address,uint256)",
          "setBurnStopAt(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)8779",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)8779": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "389994cdd216ccd81c861fae85208c973ccfe1044726ace71c873304742da0f4",
          "withoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44",
          "linkedWithoutMetadata": "2cef32a3e3c8c4edf8e30284a13c8f0f5a9b1ae366504348045ea53f74c22b44"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend()",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "setSwapOrDividend(uint256)",
          "_swapDividendTokens()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "dc49aebdcbed809b96d55b2003f2a1a2f31c94c2dcf807a96843269b1ad633c6",
          "withoutMetadata": "3dfb35ec29cd552e4b553b408693f709107bb815533c802c6e850783e6cb2cb8",
          "linkedWithoutMetadata": "3dfb35ec29cd552e4b553b408693f709107bb815533c802c6e850783e6cb2cb8"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend()",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "setSwapOrDividend(uint256)",
          "_swapDividendTokens()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "e79a8209ecc2328bb638adf109270dd1c9a787d329ea311d80dcf69fe54ec778",
          "withoutMetadata": "0b453c1a40a911eda5f5e8e8e7b06ef2b02e8dea684dbd8adbb491cdf220fcba",
          "linkedWithoutMetadata": "0b453c1a40a911eda5f5e8e8e7b06ef2b02e8dea684dbd8adbb491cdf220fcba"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "setSwapping(bool)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "96c6730c147b0a3fac988a34817c5a7572abbac563a25c2f622de5c2e5c98d9b",
          "withoutMetadata": "a52768ff90b531eb1624029aeb911df69a471b21b9b020d8f22819a0486c6a6e",
          "linkedWithoutMetadata": "a52768ff90b531eb1624029aeb911df69a471b21b9b020d8f22819a0486c6a6e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "a37ca0e3a27b64530edd699b18851766e9d11712c3041d1ba7b0fe168aeac6e7",
          "withoutMetadata": "d0d0d7a3e1e0f0614e4218ada5a47af68a0ef7191b163029aebcc3f1999cb8d9",
          "linkedWithoutMetadata": "d0d0d7a3e1e0f0614e4218ada5a47af68a0ef7191b163029aebcc3f1999cb8d9"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "9ecfb8e5edac347ba67ac6c404c1169467454a446123c7cee8cb921a85f032b6",
          "withoutMetadata": "875b4a2e283b37b5228225830ae4b2eab16aab03daa279ea413c13635d8a5919",
          "linkedWithoutMetadata": "875b4a2e283b37b5228225830ae4b2eab16aab03daa279ea413c13635d8a5919"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "7ea8aa02296e6c4b4c143f5465bbd021b922529e58e53555153e03e8bced3329",
          "withoutMetadata": "708b4a490e51ff6f14936e7812eace0d3790e0b4d1973fce11ccc211f23166bf",
          "linkedWithoutMetadata": "708b4a490e51ff6f14936e7812eace0d3790e0b4d1973fce11ccc211f23166bf"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "4ab0539d87996f009a120219c7656d7edd38d51c690f23627fd4655bc14d44dd",
          "withoutMetadata": "4aab0ba9254ba2efdb227d390db769edaf0b36b7250ffae470fa2692e05ec20b",
          "linkedWithoutMetadata": "4aab0ba9254ba2efdb227d390db769edaf0b36b7250ffae470fa2692e05ec20b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "ded41d01d7398c93f8a9b8eaa90a77a1d5141e0e31f1027ec691728acfc6c84a",
          "withoutMetadata": "d34b10b876b43f4e90da6ccfb53f02a108c590a1d62bb48f18aac5e6fa66bd40",
          "linkedWithoutMetadata": "d34b10b876b43f4e90da6ccfb53f02a108c590a1d62bb48f18aac5e6fa66bd40"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "8031d65e46a32d450509ad2b22d8002678de6e4ae2fd5350af61ac159006b07a",
          "withoutMetadata": "d54a2768c38b1c757b04911f004c3d7a226b1ea05308744bfdffeef11960731a",
          "linkedWithoutMetadata": "d54a2768c38b1c757b04911f004c3d7a226b1ea05308744bfdffeef11960731a"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "46502ed4a56bd29f0e60d671bc85ac6385b4e647d199509419f8d4432f64c194",
          "withoutMetadata": "c223c783ca862611a8aac6e3068aa31d649254418e0305ad0427dad27d7b6d73",
          "linkedWithoutMetadata": "c223c783ca862611a8aac6e3068aa31d649254418e0305ad0427dad27d7b6d73"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "2f91b0c5041bdf0b2cd275fb58a36edb47798133e7181983abefe479ab86bfdd",
          "withoutMetadata": "45893f835b6b2529454ce9434b793b7c741864f260da472f03bb02af8afa554b",
          "linkedWithoutMetadata": "45893f835b6b2529454ce9434b793b7c741864f260da472f03bb02af8afa554b"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "dd5e67def5e578561044f903b8f430c06ba5559669857f4fb8b7e187d74419b5",
          "withoutMetadata": "b48ee8747649449b79a2af13af55fc54c2b895c828ecab799ece2f0a33da4a67",
          "linkedWithoutMetadata": "b48ee8747649449b79a2af13af55fc54c2b895c828ecab799ece2f0a33da4a67"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "5c3e107d46b79b8e611656329d385d065367422fbf3a19707fb241bc69446c9a",
          "withoutMetadata": "b3cc02672ac0a5c45aec6d49e5d3c7e8288aad022b7d64d0c40ba335b58962eb",
          "linkedWithoutMetadata": "b3cc02672ac0a5c45aec6d49e5d3c7e8288aad022b7d64d0c40ba335b58962eb"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "216452d1ef3c977ad9037727322852959ac35c0b65e03fe5dfa5639f622dde5c",
          "withoutMetadata": "58bb1fc21b4c6c7bb5382a37610542bfa2eacf792ee1fa7eb448d9d47e39f1ed",
          "linkedWithoutMetadata": "58bb1fc21b4c6c7bb5382a37610542bfa2eacf792ee1fa7eb448d9d47e39f1ed"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "1a75bd07049a4185e3f14861a834feea20fa50bb7721b209ac4fd06c1c210ba8",
          "withoutMetadata": "244eb101b48ba202dedddc7dc158964971078f7c56771c4e29cce602aaec7f3e",
          "linkedWithoutMetadata": "244eb101b48ba202dedddc7dc158964971078f7c56771c4e29cce602aaec7f3e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "af74fcba221e5936a1c0722fd3619ed1afd03c636c68f0a441880959f2bc41e6",
          "withoutMetadata": "d04156b83dbcd8e4f675dc87f187d9f1c389dba1499a14d3388725b1d492de39",
          "linkedWithoutMetadata": "d04156b83dbcd8e4f675dc87f187d9f1c389dba1499a14d3388725b1d492de39"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setSwapOrDividend(uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "65cfd5535db0619b26913ba6824158cbbe21f4486ed91e888aea1fe7b936e5af",
          "withoutMetadata": "ce20ab84fc5210b1ab1270bf17100e6896a5dff05ef41913b54b116309ea767d",
          "linkedWithoutMetadata": "ce20ab84fc5210b1ab1270bf17100e6896a5dff05ef41913b54b116309ea767d"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "025c223a78fd6170f25fe2d3f4f17366429b484f9be750fcbe479159952c355e",
          "withoutMetadata": "d50f117c44e48a95c675393b25b35650c5e0f7389e740123d5887a6c0a57561d",
          "linkedWithoutMetadata": "d50f117c44e48a95c675393b25b35650c5e0f7389e740123d5887a6c0a57561d"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "73fad4c6370b5d7df535f0cb895caac680f2fd1dafd8ea4c470740f9b0c37929",
          "withoutMetadata": "d9fd8e6b6951333ac72fba459194257764aea0628eb2352d413bdc77d5d4a079",
          "linkedWithoutMetadata": "d9fd8e6b6951333ac72fba459194257764aea0628eb2352d413bdc77d5d4a079"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "1943afc869a027d27d547579d59ea1993ae58da52028079ed51aedcb28514232",
          "withoutMetadata": "9c107daa4816206ac951ed092e380958417667c670051cf9d8506140fde1fb4c",
          "linkedWithoutMetadata": "9c107daa4816206ac951ed092e380958417667c670051cf9d8506140fde1fb4c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "ad0c8d9cc203b617cae4918ac8d275d779b02d9c95133ef36bc2bc0e8e024146",
          "withoutMetadata": "d9fd8e6b6951333ac72fba459194257764aea0628eb2352d413bdc77d5d4a079",
          "linkedWithoutMetadata": "d9fd8e6b6951333ac72fba459194257764aea0628eb2352d413bdc77d5d4a079"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "e234adf40204af603dbadd748f5400c4444a120903ddc4f638784e70ea8e5c57",
          "withoutMetadata": "23778ca62bfac545449c1d90d4414eab39edc9e23f96847b291d04f00a69859c",
          "linkedWithoutMetadata": "23778ca62bfac545449c1d90d4414eab39edc9e23f96847b291d04f00a69859c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "f431a137fd7bee4f5db1deab9bdb06396357f7870f2727c8ca40403bfec90fe6",
          "withoutMetadata": "b2047cf830627f945fa8c406f8832610d677de6adae74888269fda17846069ce",
          "linkedWithoutMetadata": "b2047cf830627f945fa8c406f8832610d677de6adae74888269fda17846069ce"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "6dea8d073a20f90fc980a7824a635ecb3c9ce01a7bbeb03d8f4f4c1fb5859611",
          "withoutMetadata": "7dac70712b0a9255ebca11c4ebfc499535f752809664dae9367ec364ee3a484d",
          "linkedWithoutMetadata": "7dac70712b0a9255ebca11c4ebfc499535f752809664dae9367ec364ee3a484d"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "cf94c833a24c9fe7b2dea223ce07e600746f37009e37cf9b49ac033145fb1406",
          "withoutMetadata": "b2047cf830627f945fa8c406f8832610d677de6adae74888269fda17846069ce",
          "linkedWithoutMetadata": "b2047cf830627f945fa8c406f8832610d677de6adae74888269fda17846069ce"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "23391896ed10d7bc2d2e930d83d5fbf2c0fa0a8b5e4cc0d343d4fcc673a44f75",
          "withoutMetadata": "768769b0b8e4f3d2b021b4cca18754521fcfcc8bff86db93c927f29dc583f692",
          "linkedWithoutMetadata": "768769b0b8e4f3d2b021b4cca18754521fcfcc8bff86db93c927f29dc583f692"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "bb2aff5a019dad38c7ba82c429f5fdbc917db22d86e5fdd9038bb1f65e0557df",
          "withoutMetadata": "b2047cf830627f945fa8c406f8832610d677de6adae74888269fda17846069ce",
          "linkedWithoutMetadata": "b2047cf830627f945fa8c406f8832610d677de6adae74888269fda17846069ce"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "199d9e5d98f58a7ec32c7b81fa77c00da7a5272ab3a8d45bcfc2a6907f17088d",
          "withoutMetadata": "7dac70712b0a9255ebca11c4ebfc499535f752809664dae9367ec364ee3a484d",
          "linkedWithoutMetadata": "7dac70712b0a9255ebca11c4ebfc499535f752809664dae9367ec364ee3a484d"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "eaa4a709ba12b085865d1a34fc902de54e97f28c635c454f15c83f925a2db9ff",
          "withoutMetadata": "7f275c07ea07d63afe511eb4555584dea1a7be1e522d7b84640ea80c3cbfc53e",
          "linkedWithoutMetadata": "7f275c07ea07d63afe511eb4555584dea1a7be1e522d7b84640ea80c3cbfc53e"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "566589f860262a5ff15160be99ce8a89a7ee76fa492f5475d613d8646cc8a084",
          "withoutMetadata": "08ea13d316e23ce04349a98489f89cd0987322b042d69505896ed2a2582bad8c",
          "linkedWithoutMetadata": "08ea13d316e23ce04349a98489f89cd0987322b042d69505896ed2a2582bad8c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "9fc5b576038611b67915895d86e72b7cbd13a1ce3a92feb116dac5b6f0a92915",
          "withoutMetadata": "a4db321d4e7aba5fa6c4688d550c82ed1b9964f382149478afd538e39e9910df",
          "linkedWithoutMetadata": "a4db321d4e7aba5fa6c4688d550c82ed1b9964f382149478afd538e39e9910df"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "5a6d3365a184b8d5565bd7245cbd409f001cb54221b4e951c2182b6f7d4de9dc",
          "withoutMetadata": "07e166bf73666f274821ccc9182c79c7105e0216b328f5f3492ce78043b998f8",
          "linkedWithoutMetadata": "07e166bf73666f274821ccc9182c79c7105e0216b328f5f3492ce78043b998f8"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "7b8c5d5f92197c923404ef20faf7c47830a2ed19ec09052adcf683a536c24e45",
          "withoutMetadata": "abcf8bc4a3e3602f4d59a922f4fd39be8b885dfc427dc5b35f8bfc4512010516",
          "linkedWithoutMetadata": "abcf8bc4a3e3602f4d59a922f4fd39be8b885dfc427dc5b35f8bfc4512010516"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "570cee4f4a58c6dea3ac33ba6972b299b11fc94b471a73e6bbdf078696cbcc79",
          "withoutMetadata": "0e870ec2dcf21464f35b725ef61b7137bd78c18d7f29ede3125bbf484165c40c",
          "linkedWithoutMetadata": "0e870ec2dcf21464f35b725ef61b7137bd78c18d7f29ede3125bbf484165c40c"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "Initializable"
        ],
        "libraries": [
          "StorageSlotUpgradeable",
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:35",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36",
        "version": {
          "withMetadata": "eb820406403570d32cb605c5f9a48e8aacddf52afd50f55c37eca34aab5e63ab",
          "withoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1",
          "linkedWithoutMetadata": "2551a17c181fec929b0e90c7f0d1e182ecc95dddac291eccabd371f97b5348b1"
        },
        "inherit": [
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20Upgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20MetadataUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol:13",
        "inherit": [
          "IERC20Upgradeable"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "942badad8ead124321bac95a8ddcf189e8bfc040c2a0cbec15a02de32e9bb705",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "4f59cca456b7f258ec8c5d2eaa5c0a69b7fbb8f0ffe5e815d87f5e4392395bc9",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SafeMathUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol:16",
        "version": {
          "withMetadata": "84837c55057c814b699a64361fd06b8c80f9ca036cf1bb22bf9c9abaed0e29d1",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "EnumerableSetUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/structs/EnumerableSetUpgradeable.sol:30",
        "version": {
          "withMetadata": "341a42320f797696ee40d2122dca35cfd544dad847c5d50272473643159fe2fe",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "AAA": {
        "src": "contracts/aaa.sol:366",
        "version": {
          "withMetadata": "27aab3033b9ec4ea5ba82fd8a9840261f04cea902dd2d1302582c233935dd1b4",
          "withoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141",
          "linkedWithoutMetadata": "fedae527594f5a5a9db33c6586280438d1df700f420b3869a2d801815e4cd141"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "()",
          "initialize()",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "setSwapAtAmount(uint256)",
          "updateGasForProcessing(uint256)",
          "setFee(uint256,uint256)",
          "setUniswapV2Pair(address)",
          "setRewardTokens(address,address)",
          "setRewardTokenFree(uint256,uint256)",
          "setBurnStopAtAmount(uint256)",
          "burn(address,uint256)",
          "_getFeeValues(uint256)",
          "swapTokensFor3Tokens(uint256,address)",
          "swapTokensFor2Tokens(uint256,address)",
          "swapTokensForEth(uint256)",
          "balanceOfRewad()",
          "take(address)",
          "transferBatch(address[],uint256)",
          "setliquidityAddress(address)",
          "setRewardTokenAmount(uint256,uint256)",
          "setExcludeAddress(address)",
          "addHolder(address)",
          "isliquidityHolder(address)",
          "liquidityHolderIndexLength()",
          "removeHolder(address)",
          "()",
          "getLiquidityValues(address)",
          "process(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "liquidityHolders",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "AAA",
              "src": "contracts/aaa.sol:376"
            },
            {
              "label": "swapping",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "AAA",
              "src": "contracts/aaa.sol:377"
            },
            {
              "label": "_rewardFee",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:379"
            },
            {
              "label": "_burnFee",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:380"
            },
            {
              "label": "rewardToken1Fee",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:381"
            },
            {
              "label": "rewardToken2Fee",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:382"
            },
            {
              "label": "_routerAddress",
              "offset": 0,
              "slot": "258",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:384"
            },
            {
              "label": "_swapAtAmount",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:386"
            },
            {
              "label": "_burnStopAtAmount",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:387"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:389"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "262",
              "type": "t_contract(IUniswapV2Router02)3396",
              "contract": "AAA",
              "src": "contracts/aaa.sol:391"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "263",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:392"
            },
            {
              "label": "rewardToken1",
              "offset": 0,
              "slot": "264",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:394"
            },
            {
              "label": "rewardToken2",
              "offset": 0,
              "slot": "265",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:395"
            },
            {
              "label": "liquidityToken",
              "offset": 0,
              "slot": "266",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "AAA",
              "src": "contracts/aaa.sol:396"
            },
            {
              "label": "rewardToken1Amount",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:398"
            },
            {
              "label": "rewardToken2Amount",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:399"
            },
            {
              "label": "excludeAddress",
              "offset": 0,
              "slot": "269",
              "type": "t_address",
              "contract": "AAA",
              "src": "contracts/aaa.sol:400"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "AAA",
              "src": "contracts/aaa.sol:401"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)3396": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IUniswapV2Factory": {
        "src": "contracts/dotty.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Pair": {
        "src": "contracts/dotty.sol:47",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router01": {
        "src": "contracts/dotty.sol:158",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IUniswapV2Router02": {
        "src": "contracts/dotty.sol:319",
        "inherit": [
          "IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "TEST": {
        "src": "contracts/dotty.sol:366",
        "version": {
          "withMetadata": "ebbd02510e562747f0e9aca2d838ca6aa1d8366745656152df472cf50001deee",
          "withoutMetadata": "0c567b2d0c2e94641768fce46161a4d7ffac3dc1c3a57db73a24a95bf2c61b50",
          "linkedWithoutMetadata": "0c567b2d0c2e94641768fce46161a4d7ffac3dc1c3a57db73a24a95bf2c61b50"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable",
          "AddressUpgradeable",
          "EnumerableSetUpgradeable"
        ],
        "methods": [
          "initialize()",
          "setLPDividendAt(uint256,uint256)",
          "setHoldDividend(uint256,uint256)",
          "setSwapAndLiquifyAt(uint256)",
          "setMarketFeeSwapAt(uint256)",
          "swapMarketFee()",
          "swapAndDividend(address,address,uint256)",
          "setBurnStopAt(uint256)",
          "setOverflowTakeFee(uint256)",
          "setTakeFeeWallet(address)",
          "setExcludelpAddress(address)",
          "setMarketingWalletAddress(address,address)",
          "setSwapAt(uint256)",
          "setRewardToken1(address)",
          "setRewardToken2(address)",
          "takeReward1()",
          "takeReward2()",
          "takeBNB()",
          "takeFee()",
          "setRewardBase(uint256,uint256,uint256)",
          "setRemoveLiquidityTakeFee(bool)",
          "getTradingIsEnabled()",
          "getHolderLength()",
          "contains(address)",
          "getHolderAt(uint256)",
          "removeHolder(address)",
          "getRewardValues(address)",
          "getRewardBalance(address)",
          "dividend()",
          "updateGasForProcessing(uint256)",
          "swapAndLiquify()",
          "swapTokensForEth(uint256)",
          "swapTokensFor3Tokens(address,address,uint256,address)",
          "swapTokensFor2Tokens(address,address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "_lpHolder",
              "offset": 0,
              "slot": "251",
              "type": "t_struct(AddressSet)2407_storage",
              "contract": "TEST",
              "src": "contracts/dotty.sol:376"
            },
            {
              "label": "swapEnabled",
              "offset": 0,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:377"
            },
            {
              "label": "removeLiquidityTakeFee",
              "offset": 1,
              "slot": "253",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:378"
            },
            {
              "label": "_swapOrDividend",
              "offset": 0,
              "slot": "254",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:379"
            },
            {
              "label": "_burnStopAt",
              "offset": 0,
              "slot": "255",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:381"
            },
            {
              "label": "_swapAt",
              "offset": 0,
              "slot": "256",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:382"
            },
            {
              "label": "_lpFeeRate",
              "offset": 0,
              "slot": "257",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:383"
            },
            {
              "label": "_lp2FeeRate",
              "offset": 0,
              "slot": "258",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:384"
            },
            {
              "label": "_burnFeeRate",
              "offset": 0,
              "slot": "259",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:385"
            },
            {
              "label": "_holderFeeRate",
              "offset": 0,
              "slot": "260",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:386"
            },
            {
              "label": "_backFeeRate",
              "offset": 0,
              "slot": "261",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:387"
            },
            {
              "label": "_marketFeeRate",
              "offset": 0,
              "slot": "262",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:388"
            },
            {
              "label": "_liquidityFee",
              "offset": 0,
              "slot": "263",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:390"
            },
            {
              "label": "_market1FeeSum",
              "offset": 0,
              "slot": "264",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:391"
            },
            {
              "label": "_market2FeeSum",
              "offset": 0,
              "slot": "265",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:392"
            },
            {
              "label": "_overflowTakeFee",
              "offset": 0,
              "slot": "266",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:393"
            },
            {
              "label": "_feeRate",
              "offset": 0,
              "slot": "267",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:395"
            },
            {
              "label": "_lpDividendFirstAt",
              "offset": 0,
              "slot": "268",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:397"
            },
            {
              "label": "_lpDividendSecondAt",
              "offset": 0,
              "slot": "269",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:398"
            },
            {
              "label": "_holdDividendAt",
              "offset": 0,
              "slot": "270",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:399"
            },
            {
              "label": "_holdDividendEnd",
              "offset": 0,
              "slot": "271",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:400"
            },
            {
              "label": "_swapAndLiquifyAt",
              "offset": 0,
              "slot": "272",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:401"
            },
            {
              "label": "_marketFeeSwapAt",
              "offset": 0,
              "slot": "273",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:402"
            },
            {
              "label": "_rewardBaseLPFirst",
              "offset": 0,
              "slot": "274",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:404"
            },
            {
              "label": "_rewardBaseLPSecond",
              "offset": 0,
              "slot": "275",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:405"
            },
            {
              "label": "_rewardBaseHolder",
              "offset": 0,
              "slot": "276",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:406"
            },
            {
              "label": "lastProcessedIndex",
              "offset": 0,
              "slot": "277",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:408"
            },
            {
              "label": "uniswapV2Pair",
              "offset": 0,
              "slot": "278",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:410"
            },
            {
              "label": "_marketingWalletAddress",
              "offset": 0,
              "slot": "279",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:411"
            },
            {
              "label": "_marketing1WalletAddress",
              "offset": 0,
              "slot": "280",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:412"
            },
            {
              "label": "_excludelpAddress",
              "offset": 0,
              "slot": "281",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:414"
            },
            {
              "label": "_takeFeeWallet",
              "offset": 0,
              "slot": "282",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:415"
            },
            {
              "label": "gasForProcessing",
              "offset": 0,
              "slot": "283",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:417"
            },
            {
              "label": "deadWallet",
              "offset": 0,
              "slot": "284",
              "type": "t_address",
              "contract": "TEST",
              "src": "contracts/dotty.sol:418"
            },
            {
              "label": "swapping",
              "offset": 20,
              "slot": "284",
              "type": "t_bool",
              "contract": "TEST",
              "src": "contracts/dotty.sol:419"
            },
            {
              "label": "uniswapV2Router",
              "offset": 0,
              "slot": "285",
              "type": "t_contract(IUniswapV2Router02)5740",
              "contract": "TEST",
              "src": "contracts/dotty.sol:421"
            },
            {
              "label": "_whitelist",
              "offset": 0,
              "slot": "286",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "TEST",
              "src": "contracts/dotty.sol:422"
            },
            {
              "label": "_dot",
              "offset": 0,
              "slot": "287",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:424"
            },
            {
              "label": "_shib",
              "offset": 0,
              "slot": "288",
              "type": "t_contract(IERC20Upgradeable)1413",
              "contract": "TEST",
              "src": "contracts/dotty.sol:425"
            },
            {
              "label": "tradingEnabledTimestamp",
              "offset": 0,
              "slot": "289",
              "type": "t_uint256",
              "contract": "TEST",
              "src": "contracts/dotty.sol:427"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Upgradeable)1413": {
              "label": "contract IERC20Upgradeable",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router02)5740": {
              "label": "contract IUniswapV2Router02",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)2407_storage": {
              "label": "struct EnumerableSetUpgradeable.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)2106_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)2106_storage": {
              "label": "struct EnumerableSetUpgradeable.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV1": {
        "src": "contracts/mytoken.sol:13",
        "version": {
          "withMetadata": "0f5f33d4a1dd2b1b3b06c5873acc9ab60a84127fd1df6d7c5ee8b5c89056a899",
          "withoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7",
          "linkedWithoutMetadata": "04579de718e8249278535b51e8b28a8f210b060da02e3d411acc23cd6a7b25d7"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV1",
              "src": "contracts/mytoken.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyTokenV2": {
        "src": "contracts/mytokenV2.sol:12",
        "version": {
          "withMetadata": "a4c23d6c2f615142a1a353e313d999b36de5e86a0649be504e786859fc24acf9",
          "withoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5",
          "linkedWithoutMetadata": "ea882ecfa18a68f0225e219f5cd440d365e3736be4df07640a6a3db11f68e3d5"
        },
        "inherit": [
          "OwnableUpgradeable",
          "UUPSUpgradeable",
          "ERC1967UpgradeUpgradeable",
          "IERC1822ProxiableUpgradeable",
          "ERC20Upgradeable",
          "IERC20MetadataUpgradeable",
          "IERC20Upgradeable",
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [
          "SafeMathUpgradeable"
        ],
        "methods": [
          "initialize()",
          "()",
          "getValue1()",
          "getValue2()",
          "setValue1(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "51",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "52",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "53",
              "type": "t_uint256",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "54",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "55",
              "type": "t_string_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "56",
              "type": "t_array(t_uint256)45_storage",
              "contract": "ERC20Upgradeable",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "201",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "202",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            },
            {
              "label": "value1",
              "offset": 0,
              "slot": "251",
              "type": "t_uint256",
              "contract": "MyTokenV2",
              "src": "contracts/mytokenV2.sol:14"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)45_storage": {
              "label": "uint256[45]",
              "numberOfBytes": "1440"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    }
  ]
}